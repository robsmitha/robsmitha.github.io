{"version":3,"sources":["services/api.service.js","services/github.service.js","contexts/UserContext.js","components/_layout/Header.js","components/_layout/NavMenu.js","components/_layout/LayoutRoute.js","components/_helpers/Loading.js","components/_helpers/Devicon.js","components/_helpers/UnDraw.js","components/_helpers/ErrorMessage.js","components/Home.js","components/Repo.js","components/_helpers/FileChangeStatus.js","components/Commit.js","contexts/ThemeContext.js","App.js","serviceWorker.js","index.js"],"names":["cache","sessionStorage","getItem","Map","JSON","parse","get","url","a","has","item","json","fetch","undefined","response","ok","set","cached_at","Date","getTime","setItem","stringify","Array","from","entries","console","log","endpoint","login","gitHubService","getUser","getUserRepos","getStarred","getRepo","repo","getCommits","getLanguages","getCommit","sha","UserContext","React","createContext","UserProvider","props","state","user","loading","success","data","this","setState","Provider","value","children","Component","UserConsumer","Consumer","Header","Card","className","CardHeader","to","src","avatar_url","name","location","ListGroup","flush","icon","faHome","ListGroupItem","faExternalLinkAlt","href","target","rel","faGithub","faLinkedin","faFilePdf","NavMenu","toggleNavbar","collapsed","collapseNavbar","navHeight","document","querySelector","onload","navbar","clientHeight","style","paddingTop","Navbar","Container","NavbarBrand","tag","Link","width","NavbarToggler","onClick","faBars","faTimes","top","concat","id","NavItem","NavLink","Layout","Row","Col","md","LayoutRoute","component","rest","render","matchProps","Loading","message","role","Devicon","language","toLowerCase","alt","UnDraw","window","innerWidth","svg","svgs","Math","floor","random","length","ErrorMessage","xs","faExclamationTriangle","Home","repos","starred","filter","el","description","split","bio","map","r","index","key","replace","CardBody","sm","html_url","Repo","match","params","commits","languages","dates","reduce","groups","group","date","commit","committer","push","Object","keys","type","l","c","faLaptopCode","toDateString","gc","author","title","toLocaleTimeString","FileChangeStatus","color","status","Badge","Commit","toLocaleString","files","stats","additions","deletions","f","blob_url","faFileCode","filename","faPlus","faMinus","ThemeContext","ThemeProvider","changeTheme","event","theme","App","unlisten","history","listen","action","scrollTo","exact","path","withRouter","Boolean","hostname","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","StrictMode","basename","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.18a789c8.chunk.js","sourcesContent":["\r\nconst cache = sessionStorage.getItem('cache') !== null \r\n? new Map(JSON.parse(sessionStorage.getItem('cache')))\r\n: new Map()\r\n\r\nexport async function get(url) {\r\n    \r\n    //check cache\r\n    if(cache.has(url)){\r\n        let item = cache.get(url)\r\n        return item.json \r\n    }\r\n\r\n    //do request\r\n    try {\r\n        const response = await fetch(url)\r\n        if(response !== undefined && response.ok){\r\n            let json = await response.json()\r\n            cache.set(url, {\r\n                json: json,\r\n                cached_at: new Date().getTime()\r\n            })\r\n            sessionStorage.setItem('cache', JSON.stringify(Array.from(cache.entries())))\r\n            return json;\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n    return null;\r\n}","import { get } from './api.service'\r\n\r\n\r\nconst endpoint = 'https://api.github.com'\r\nconst login = 'robsmitha'\r\nexport const gitHubService = {\r\n    getUser,\r\n    getUserRepos,\r\n    getStarred,\r\n    getRepo,\r\n    getCommits,\r\n    getLanguages,\r\n    getCommit\r\n};\r\n\r\nfunction getUser() {\r\n    return get(`${endpoint}/users/${login}`)\r\n}\r\n\r\nfunction getUserRepos() {\r\n    return get(`${endpoint}/users/${login}/repos?sort=pushed&direction=desc`)\r\n}\r\n\r\nfunction getStarred(){\r\n    return get(`${endpoint}/users/${login}/starred`)\r\n}\r\n\r\nfunction getRepo(repo){\r\n    return get(`${endpoint}/repos/${login}/${repo}`)\r\n}\r\n\r\nfunction getCommits(repo){\r\n    return get(`${endpoint}/repos/${login}/${repo}/commits`)\r\n}\r\n\r\nfunction getCommit(repo, sha){\r\n    return get(`${endpoint}/repos/${login}/${repo}/commits/${sha}`)\r\n}\r\n\r\nfunction getLanguages(repo){\r\n    return get(`${endpoint}/repos/${login}/${repo}/languages`)\r\n}","import React, { Component } from 'react';\r\nimport { gitHubService } from './../services/github.service';\r\n\r\nconst UserContext = React.createContext();\r\n\r\nclass UserProvider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props) \r\n        this.state = {\r\n            user: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUser()\r\n    }\r\n\r\n    async getUser(){\r\n        const data = await gitHubService.getUser()\r\n        this.setState({\r\n            user: {\r\n                loading: false,\r\n                success: data !== null,\r\n                data: data\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <UserContext.Provider value={{\r\n                user: this.state.user\r\n            }}>\r\n                {this.props.children}\r\n            </UserContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst UserConsumer = UserContext.Consumer\r\n\r\nexport { UserProvider, UserConsumer, UserContext }","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, Badge, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilePdf, faExternalLinkAlt, faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { UserConsumer } from '../../contexts/UserContext';\r\n\r\nexport default class Header extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <UserConsumer>\r\n                {({ user }) => (\r\n                    <Card className=\"border-0 shadow mb-5 mb-lg-0\">\r\n                    <CardHeader className=\"bg-gray-100 py-4 border-0 text-center\">\r\n                        <Link to={'/'}>\r\n                            <img className=\"d-block avatar avatar-xxl p-2 mb-2 mx-auto\" src={!user.loading && user.success && user.data.avatar_url !== null\r\n                                ?  user.data.avatar_url\r\n                                : 'https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/images/robsmitha.png'} loading=\"lazy\" />\r\n                        </Link>\r\n                        <h5>\r\n                            {!user.loading && user.success\r\n                            ? user.data.name\r\n                            : 'Rob Smitha'}\r\n                        </h5>\r\n                        <p className=\"text-muted text-sm mb-0\">\r\n                        {!user.loading && user.success\r\n                        ? user.data.location\r\n                        : 'United States'}\r\n                        </p>\r\n                    </CardHeader>\r\n                    <ListGroup flush>\r\n                        <Link to={'/'} className=\"list-group-item list-group-item-action\">\r\n                            <FontAwesomeIcon icon={faHome} className=\"text-secondary\" />&nbsp;\r\n                            Home\r\n                        </Link>\r\n                        <ListGroupItem className=\"small text-muted\">\r\n                            <FontAwesomeIcon icon={faExternalLinkAlt} />&nbsp;\r\n                            External links\r\n                        </ListGroupItem>\r\n                        <a href=\"https://github.com/robsmitha\" target=\"_blank\" className=\"list-group-item list-group-item-action\" rel=\"noopener noreferrer\">\r\n                            <FontAwesomeIcon icon={faGithub} className=\"text-github\" />&nbsp;\r\n                            GitHub\r\n                        </a>\r\n                        <a href=\"https://www.linkedin.com/in/robsmitha/\" target=\"_blank\" className=\"list-group-item list-group-item-action\" rel=\"noopener noreferrer\">\r\n                            <FontAwesomeIcon icon={faLinkedin} className=\"text-linkedin\" />&nbsp;\r\n                            LinkedIn\r\n                        </a>\r\n                        <a href=\"https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/files/Rob+Smitha+Resume.pdf\" target=\"_blank\" className=\"list-group-item list-group-item-action\" rel=\"noopener noreferrer\">\r\n                            <FontAwesomeIcon icon={faFilePdf} className=\"text-resume\" />&nbsp;\r\n                            Resume\r\n                        </a>\r\n                    </ListGroup>\r\n                </Card>\r\n                    )}\r\n            </UserConsumer>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css'\r\nimport { Container, NavbarToggler, NavbarBrand, NavItem, NavLink, Navbar } from 'reactstrap';\r\nimport { UserConsumer } from '../../contexts/UserContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExternalLinkAlt, faHome, faFilePdf, faTimes, faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default class NavMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: true,\r\n            navHeight: 56\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const avatar = document.querySelector('.avatar');\r\n        avatar.onload = () => {\r\n            const navbar = document.querySelector('.main-nav');\r\n            this.setState({ navHeight: navbar !== null ? navbar.clientHeight : 56 })\r\n        };\r\n    }\r\n\r\n    toggleNavbar = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        })\r\n    }\r\n\r\n    collapseNavbar = () => {\r\n        this.setState({ collapsed: true })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <UserConsumer>\r\n            {({ user }) => (\r\n            <section className=\"main-nav-header\" style={{paddingTop: this.state.navHeight + 'px'}}>\r\n                <Navbar className=\"main-nav navbar navbar-expand-lg fixed-top navbar-light shadow bg-light p-3\">\r\n                    <Container>\r\n                        <NavbarBrand className=\"mr-auto mr-lg-0 d-block d-md-none\" tag={Link} to=\"/\">\r\n                            <div className=\"media\">\r\n                            <img className=\"avatar\" src={!user.loading && user.success && user.data.avatar_url !== null\r\n                                ?  user.data.avatar_url\r\n                                : 'https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/images/robsmitha.png'} \r\n                                className=\"rounded-circle img-fluid\" \r\n                                style={{ width: '4rem'}} />&nbsp;\r\n                                <div className=\"media-body\">\r\n                                    <span className=\"d-block\">Rob Smitha</span>\r\n                                    <small className=\"text-muted d-block\">Software Engineer</small>\r\n                                </div>\r\n                            </div>\r\n                        </NavbarBrand>\r\n                        <NavbarToggler className=\"p-2 border-0\" onClick={this.toggleNavbar}>\r\n                            <FontAwesomeIcon icon={this.state.collapsed ? faBars : faTimes} />\r\n                        </NavbarToggler>\r\n                        <div style={{ top: this.state.navHeight + 'px' }} \r\n                        className={'navbar-collapse offcanvas-collapse bg-light '.concat(!this.state.collapsed ? ' open' : '')} \r\n                        id=\"navbarsExampleDefault\">\r\n                            <ul className=\"navbar-nav mr-auto\">\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} to={'/'} onClick={this.collapseNavbar}>\r\n                                        <FontAwesomeIcon icon={faHome} className=\"text-secondary\" />&nbsp;Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </ul>\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <li className=\"navbar-text small text-muted\">\r\n                                    <FontAwesomeIcon icon={faExternalLinkAlt} />&nbsp;\r\n                                    External links\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"https://github.com/robsmitha\" target=\"_blank\" className=\"nav-link\" rel=\"noopener noreferrer\">\r\n                                    <FontAwesomeIcon icon={faGithub} className=\"text-github\" />&nbsp;GitHub\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"https://www.linkedin.com/in/robsmitha/\" target=\"_blank\" className=\"nav-link\" rel=\"noopener noreferrer\">\r\n                                    <FontAwesomeIcon icon={faLinkedin} className=\"text-linkedin\" />&nbsp;LinkedIn\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/files/Rob+Smitha+Resume.pdf\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"nav-link\">\r\n                                    <FontAwesomeIcon icon={faFilePdf} className=\"text-resume\" />&nbsp;Resume\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </Container>\r\n                </Navbar>\r\n            </section> \r\n            )}\r\n            </UserConsumer>           \r\n            )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Route } from 'react-router-dom';  \r\nimport { Row, Col, Container, Navbar } from 'reactstrap';\r\nimport Header from './Header'\r\nimport NavMenu from './NavMenu';\r\n\r\n\r\nconst Layout = ({ children }) => (\r\n    <section>\r\n        <NavMenu />\r\n        <Container className=\"py-3 py-md-4\">\r\n            <Row>\r\n                <Col md=\"3\" className=\"d-none d-md-block\">\r\n                    <Header />\r\n                </Col>\r\n                <Col md=\"9\">\r\n                    {children}\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    </section>\r\n);\r\n\r\nconst LayoutRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n            <Layout>\r\n                <Component {...matchProps} />\r\n            </Layout>\r\n        )} />\r\n    )\r\n}\r\n\r\nexport default LayoutRoute;","import React from 'react';\r\n\r\nconst Loading = props => {\r\n    let message = props.message !== undefined ? props.message : ''\r\n    return (\r\n        <span>\r\n            <span className=\"spinner-grow\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </span>\r\n            {message}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Loading","﻿import React from 'react';\r\n\r\nconst Devicon = props => {\r\n    let icon = '/devicon/devicon-original-wordmark.svg'\r\n    const baseUrl = 'https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/vendor/devicons'\r\n    if(props.language !== undefined && props.language !== null){\r\n        switch(props.language.toLowerCase()){\r\n            case 'c#':\r\n                icon = '/csharp/csharp-original.svg'\r\n                break;\r\n            case 'javascript':\r\n                icon = '/javascript/javascript-plain.svg'\r\n                break;\r\n            case 'css':\r\n                icon = '/css3/css3-original-wordmark.svg'\r\n                break;\r\n            case 'html':\r\n                icon = '/html5/html5-original-wordmark.svg'\r\n                break;\r\n            case 'typescript':\r\n                icon = '/typescript/typescript-original.svg'\r\n                break;\r\n        }\r\n    }\r\n    return <img src={baseUrl + icon} alt={props.language} {...props} />\r\n}\r\n\r\nexport default Devicon","import React from 'react';\r\n\r\nexport const UnDrawServerDown = 'undraw_server_down_s4lk'\r\nexport const UnDrawBlankCanvas =  'undraw_blank_canvas_3rbb'\r\nexport const UnDrawBugFixing = 'undraw_bug_fixing_oc7a'\r\nexport const UnDrawCancel =  'undraw_cancel_u1it'\r\nexport const UnDrawPageNotFound =  'undraw_page_not_found_su7k'\r\nexport const UnDrawQAEngineers =  'undraw_QA_engineers_dg5p'\r\nexport const UnDrawWarning =  'undraw_warning_cyit'\r\nexport const UnDrawNotFound =  'undraw_not_found_60pq'\r\nexport const UnDrawEmpty =  'empty'\r\n\r\nconst UnDraw = props => {\r\n    const width = window.innerWidth < 768 ? \"200px\" : \"300px\";\r\n    const baseUrl = 'https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/vendor/unDraw/'\r\n    let svg = ''\r\n    switch(props.svg){\r\n        case undefined:\r\n        case null: \r\n        case '': \r\n            const svgs = [ \r\n                UnDrawServerDown,\r\n                UnDrawBlankCanvas,\r\n                UnDrawBugFixing,\r\n                UnDrawCancel,\r\n                UnDrawPageNotFound,\r\n                UnDrawQAEngineers,\r\n                UnDrawWarning,\r\n                UnDrawNotFound,\r\n                UnDrawEmpty\r\n            ]\r\n            svg = svgs[Math.floor(Math.random() * svgs.length)]\r\n            break;\r\n        default:\r\n            svg = props.svg\r\n            break;\r\n    }\r\n    return <img width={width} src={baseUrl + svg + '.svg'} alt={props.svg} {...props} />\r\n}\r\nexport default UnDraw","import React from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport UnDraw from './UnDraw';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst ErrorMessage = props => {\r\n    let message = props.message !== undefined ? props.message : ''\r\n    return (\r\n        <Row>\r\n            <Col xs=\"12\">\r\n                <UnDraw className=\"d-block mx-auto\" />\r\n            </Col>\r\n            <Col xs=\"12\">\r\n                <Row className=\"h-100 justify-content-center align-items-center\">\r\n                    <Col>\r\n                        <p className=\"lead mt-2 text-muted text-center\">\r\n                            <FontAwesomeIcon icon={faExclamationTriangle} />&nbsp;\r\n                            {message}\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","﻿import React, { Component } from 'react';\r\nimport { UserConsumer } from './../contexts/UserContext';\r\nimport './Home.css'\r\nimport { gitHubService } from '../services/github.service';\r\nimport Loading from './../components/_helpers/Loading'\r\nimport Devicon from './../components/_helpers/Devicon'\r\nimport { Card, Col, CardBody, Row } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorMessage from './_helpers/ErrorMessage';\r\n\r\nexport default class Home extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            repos: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            },\r\n            starred: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUserRepos()\r\n        this.getStarred()\r\n    }\r\n\r\n    async getUserRepos(){\r\n        const data = await gitHubService.getUserRepos()\r\n        const success = data !== null\r\n        const repos = success ? data.filter((el) => el.description !== null && el.description.length > 0) : [];\r\n            this.setState({\r\n                repos: {\r\n                    loading: false,\r\n                    success: success,\r\n                    data: repos\r\n                }\r\n            })\r\n    }\r\n\r\n    async getStarred(){\r\n        const data = await gitHubService.getStarred()\r\n        this.setState({\r\n            starred: {\r\n                loading: false,\r\n                success: data !== null,\r\n                data: data\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { repos, starred } = this.state\r\n        return(\r\n            <UserConsumer>\r\n                {({ user }) => (\r\n                <div>\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                        Welcome\r\n                    </p>\r\n                    <h2 className=\"mb-4\">\r\n                        {!user.loading && user.success\r\n                        ? <span>Hello, I'm {user.data.name.split(' ')[0]}!</span>\r\n                        : <span>Hello, I'm Rob!</span>}\r\n                    </h2>\r\n                    \r\n                    {user.loading\r\n                    ? <Loading message=\"Loading user, please wait..\" />\r\n                    : !repos.success\r\n                        ? <p className=\"lead text-muted mt-2\">Full Stack Web Development with .NET and JavaScript.</p>\r\n                        : <p className=\"lead text-muted mt-2\">{user.data.bio}</p>}\r\n                    <hr />\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                    Projects\r\n                    </p>\r\n                    <h3 className=\"mb-4 h4\">Repositories</h3>\r\n                    <div className=\"mb-3\">\r\n                        <Row>\r\n                            {repos.loading\r\n                            ? <Loading message=\"Loading repos, please wait..\" />\r\n                            : !repos.success\r\n                            ? <Col>\r\n                                <ErrorMessage message=\"Could not load repos\" />\r\n                            </Col>\r\n                            : repos.data.map((r, index) =>\r\n                            <Col md=\"4\" key={r.name} className=\"mb-4 hover-animate\">\r\n                                <Link className=\"text-decoration-none\" to={'/repo/:name'.replace(':name', r.name)}>\r\n                                    <Card className=\"h-100 text-center shadow border-0\">\r\n                                        <CardBody>\r\n                                            <Devicon className=\"bd-placeholder-img mb-2 mr-2 rounded\" language={r.language} />\r\n                                            <strong className=\"text-gray-dark\">{r.name}</strong>\r\n                                            <p className=\"pb-3 mb-0 small lh-125 text-muted\">\r\n                                                {r.description}\r\n                                            </p>\r\n                                        </CardBody>\r\n                                    </Card>\r\n                                </Link>\r\n                            </Col>)}\r\n                        </Row>\r\n                    </div>\r\n                    <hr />\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                    Tools\r\n                    </p>\r\n                    <h3 className=\"mb-4 h4\">\r\n                    Resources\r\n                    </h3>\r\n                    <div className=\"mb-3\">\r\n                        <Row>\r\n                            {starred.loading\r\n                            ? <Loading message=\"Loading tools, please wait..\" />\r\n                            : !starred.success\r\n                            ? <Col>\r\n                                <ErrorMessage message=\"Could not load tools.\" />\r\n                            </Col>\r\n                            : starred.data.map((r, index) =>\r\n                            <Col xs=\"6\" sm=\"auto\" key={r.name} className=\"mb-4 text-center\">\r\n                                <a target=\"_blank\" href={r.html_url} rel=\"noopener noreferrer\" className=\"text-muted\">\r\n                                    <Devicon className=\"bd-placeholder-img mb-2 rounded\" language={r.language} />\r\n                                    <small className=\"d-block text-gray-dark\">{r.name}</small>\r\n                                </a>\r\n                            </Col>)}\r\n                        </Row>\r\n                    </div>\r\n                </div>\r\n                )}\r\n            </UserConsumer>\r\n        )\r\n    }\r\n}","﻿import React, { Component } from 'react';\r\nimport { gitHubService } from '../services/github.service';\r\nimport { Col, Row, ListGroup } from 'reactstrap';\r\nimport Loading from './_helpers/Loading';\r\nimport Devicon from './_helpers/Devicon';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLaptopCode, faQuoteLeft, faQuoteRight } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport ErrorMessage from './_helpers/ErrorMessage';\r\n\r\nexport default class Repo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: this.props.match.params.name,\r\n            repo: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            },\r\n            commits: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            },\r\n            languages: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getRepo()\r\n        this.getLanguages()\r\n        this.getCommits()\r\n    }\r\n\r\n    async getRepo(){\r\n        const data = await gitHubService.getRepo(this.state.name)\r\n        this.setState({\r\n            repo: {\r\n                loading: false,\r\n                success: data !== null,\r\n                data: data\r\n            }\r\n        })\r\n    }\r\n\r\n    async getCommits(){\r\n        const data = await gitHubService.getCommits(this.state.name)\r\n\r\n        const dates = data.reduce((groups, group) => {\r\n            const date = group.commit.committer.date.split('T')[0];\r\n            if (!groups[date]) {\r\n                groups[date] = [];\r\n            }\r\n            groups[date].push(group);\r\n            return groups;\r\n        }, {});\r\n\r\n        const commits = Object.keys(dates).map((date) => {\r\n            return {\r\n            date,\r\n            commits: dates[date]\r\n            };\r\n        });\r\n\r\n        this.setState({\r\n            commits: {\r\n                loading: false,\r\n                success: commits !== null,\r\n                data: commits\r\n            }\r\n        })\r\n    }\r\n\r\n    async getLanguages(){\r\n        const data = await gitHubService.getLanguages(this.state.name)\r\n        this.setState({\r\n            languages: {\r\n                loading: false,\r\n                success: data !== null,\r\n                data: data\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { repo, name, languages, commits } = this.state\r\n        return(\r\n            <div>\r\n                \r\n                <div className=\"mb-4\">\r\n                    <Link to={'/'}>Home</Link> &minus; {repo.data !== null ? repo.data.name : name}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                <p className=\"subtitle text-sm text-primary\">\r\n                    Repository\r\n                </p>\r\n                {repo.loading\r\n                ? <Loading message=\"Loading repo, please wait..\" />\r\n                : !repo.success\r\n                ? <ErrorMessage message=\"Could not load repo.\" />\r\n                : <div>\r\n                    <h2 className=\"d-block mb-4\">\r\n                        {repo.data.name}\r\n                    </h2>\r\n                    <p className=\"lead mt-2\">\r\n                        {repo.data.description}\r\n                    </p>\r\n                    <a href={repo.data.html_url} type=\"button\" className=\"btn btn-light\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                        <FontAwesomeIcon icon={faGithub} />&nbsp;Continue to GiHub\r\n                    </a>\r\n                    <hr />\r\n\r\n                </div>}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                        Languages\r\n                    </p>\r\n                    <h3 className=\"d-block mb-4\">Breakdown</h3>\r\n                {languages.loading \r\n                 ? <Loading message=\"Loading languages, please wait..\" />\r\n                : !languages.success \r\n                ?  <ErrorMessage message=\"Could not load languages.\" />\r\n                : <div>\r\n                    <Row>\r\n                        {Object.keys(languages.data).map(l => \r\n                        <Col key={l} className=\"mb-3 text-md-left text-center\">\r\n                            <Devicon className=\"bd-placeholder-img mb-2 mr-2 rounded\" language={l} />\r\n                            <small className=\"text-muted lead\">{languages.data[l]}</small>\r\n                        </Col>)}\r\n                    </Row>\r\n                </div>}\r\n                </div>\r\n                <hr />\r\n\r\n                <div className=\"mb-3\">\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                        Commits\r\n                    </p>\r\n                    <h3 className=\"d-block mb-4\">Activity</h3>\r\n                {commits.loading \r\n                 ? <Loading message=\"Loading commits, please wait..\" />\r\n                : !commits.success \r\n                ? <ErrorMessage message=\"Could not load commits.\" />\r\n                : <div>\r\n                    <div className=\"commits-listing commits-listing-padded\">\r\n                        {commits.data.map(c => \r\n                        <div key={c.date}>\r\n                            <div className=\"commit-group-title\">\r\n                                <FontAwesomeIcon className=\"git-commit\" icon={faLaptopCode} />\r\n                                <small>{new Date(c.date).toDateString()}</small>\r\n                            </div>\r\n                            <div className=\"commit-group pb-3 mb-0 small lh-125\">\r\n                                <ListGroup>\r\n                                    {c.commits.map(gc => \r\n                                        <Link key={gc.sha} className=\"list-group-item list-group-item-action\" to={'/repo/:name/commit/:sha'.replace(':name', name).replace(':sha', gc.sha)}>\r\n                                            <div className=\"media\">\r\n                                                <img src={gc.author.avatar_url} className=\"bd-placeholder-img mb-2 mr-2 rounded\" />&nbsp;\r\n                                                <div className=\"media-body\">\r\n                                                    <blockquote className=\"blockquote\">\r\n                                                        <small className=\"d-block mb-2 text-break\">\r\n                                                            {gc.commit.message}\r\n                                                        </small>\r\n                                                        <div className=\"blockquote-footer small\">\r\n                                                            {gc.author.login} on&nbsp;\r\n                                                            <cite title=\"Commited on\">{new Date(gc.commit.author.date).toLocaleTimeString()}</cite>\r\n                                                        </div>\r\n                                                    </blockquote>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                        )}\r\n                                </ListGroup>\r\n                            </div>\r\n                        </div>)}\r\n                    </div>\r\n                </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Badge } from 'reactstrap';\r\n\r\nconst FileChangeStatus = props => {\r\n    let color = 'light'\r\n    switch(props.status.toLowerCase()){\r\n        case 'modified':\r\n            color = 'primary'\r\n            break;\r\n        case 'renamed':\r\n            color = 'light'\r\n            break;\r\n        case 'added':\r\n            color = 'success'\r\n            break;\r\n        case 'removed':\r\n        color = 'danger'\r\n        break;\r\n        default: break;\r\n    }\r\n    return <Badge color={color} {...props}>{props.status}</Badge>\r\n}\r\n\r\nexport default FileChangeStatus","import React, { Component } from 'react';\r\nimport { gitHubService } from '../services/github.service';\r\nimport Loading from './_helpers/Loading';\r\nimport UnDraw from './_helpers/UnDraw';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Link } from 'react-router-dom';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faPlusSquare, faPlus, faMinus, faFileCode } from '@fortawesome/free-solid-svg-icons';\r\nimport { Badge, ListGroup } from 'reactstrap';\r\nimport FileChangeStatus from './_helpers/FileChangeStatus';\r\n\r\nexport default class Commit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: this.props.match.params.name,\r\n            sha: this.props.match.params.sha,\r\n            commit: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getCommit()\r\n    }\r\n    \r\n    async getCommit(){\r\n        const { name, sha } = this.state\r\n        const data = await gitHubService.getCommit(name, sha)\r\n        this.setState({\r\n            commit: {\r\n                loading: false,\r\n                success: data !== null,\r\n                data: data\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {commit, name, sha} = this.state\r\n        return(\r\n            <div className=\"h-100\">\r\n                <div className=\"mb-4\">\r\n                    <Link to={'/'}>Home</Link>&nbsp;&minus;&nbsp;\r\n                    <Link to={'/repo/:name'.replace(':name', name)}>{name}</Link>&nbsp;&minus;&nbsp;<span className=\"text-break\">{sha}</span>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                <p className=\"subtitle text-sm text-primary\">\r\n                Commit\r\n                </p>\r\n                {commit.loading\r\n                ? <Loading message=\"Loading commit, please wait..\" />\r\n                : !commit.success\r\n                ? <div>\r\n                    <h2 className=\"d-block mb-4\">\r\n                    {name} - {sha}\r\n                    </h2>\r\n                    <UnDraw icon=\"undraw_not_found_60pq\" />\r\n                    <p className=\"lead mt-2\">\r\n                    Could not load the commit.\r\n                    </p>\r\n                </div>\r\n                : <div>\r\n                    <h2 className=\"d-block mb-4\">\r\n                        Message\r\n                    </h2>\r\n\r\n                    <blockquote className=\"blockquote\">\r\n                        <p className=\"mb-0 lead\">{commit.data.commit.message}</p>\r\n                        <div className=\"blockquote-footer\">{commit.data.commit.committer.name} on&nbsp;\r\n                            <cite title=\"Commited on\">{new Date(commit.data.commit.committer.date).toLocaleString()}</cite>\r\n                        </div>\r\n                    </blockquote>\r\n                    <hr />\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                        Stats\r\n                    </p>\r\n                    <h2 className=\"d-block mb-4\">\r\n                        Changes\r\n                    </h2>\r\n                    <p className=\"lead mt-2\">\r\n                        Showing <strong>{commit.data.files.length} changed files </strong> \r\n                        with <strong className=\"text-success\">{commit.data.stats.additions} additions </strong> \r\n                        and <strong className=\"text-danger\">{commit.data.stats.deletions} deletions.</strong>\r\n                    </p>\r\n                    <ListGroup flush>\r\n                        {commit.data.files.map((f, index) =>\r\n                        <a target=\"_blank\" rel=\"norefeffer noopener\" href={f.blob_url} className=\"list-group-item list-group-item-action px-1\" key={index}>\r\n                            <span className=\"d-block\">\r\n                                <small className=\"text-nowrap\"><FontAwesomeIcon icon={faFileCode} />&nbsp;</small>\r\n                                <span className=\"text-break\">{f.filename}</span>\r\n                            </span>\r\n                            <div>\r\n                                <FileChangeStatus status={f.status} />&nbsp;\r\n                                <span className=\"text-success\">\r\n                                    <FontAwesomeIcon icon={faPlus} />&nbsp;{f.additions}&nbsp;\r\n                                </span>\r\n                                <span className=\"text-danger\">\r\n                                    <FontAwesomeIcon icon={faMinus} />&nbsp;{f.deletions}\r\n                                </span>\r\n                            </div>\r\n                        </a>\r\n                        )}\r\n                        <a href={commit.data.html_url} type=\"button\" className=\"list-group-item list-group-item-action\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <FontAwesomeIcon icon={faGithub} />&nbsp;See full commit on GitHub\r\n                        </a>\r\n                    </ListGroup>\r\n                </div>}\r\n                </div>\r\n            </div>     \r\n            )\r\n    }\r\n    \r\n}","﻿import React, { Component } from 'react';\r\n\r\nconst ThemeContext = React.createContext();\r\n\r\nclass ThemeProvider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props) \r\n        this.state = {\r\n            theme: null\r\n        }\r\n    }\r\n\r\n    changeTheme = event => {\r\n        let theme = event.target.value;\r\n        console.log(theme)\r\n        this.setState({\r\n            theme: theme\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeContext.Provider value={{\r\n                theme: this.state.theme,\r\n                changeTheme: this.changeTheme\r\n            }}>\r\n                {this.props.children}\r\n            </ThemeContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst ThemeConsumer = ThemeContext.Consumer\r\n\r\nexport { ThemeProvider, ThemeConsumer, ThemeContext }","import React, { Component } from 'react';\nimport './App.css';\n\n//Layouts\nimport LayoutRoute from './components/_layout/LayoutRoute';\n\n//Components\nimport Home from './components/Home'\nimport Repo from './components/Repo'\nimport Commit from './components/Commit'\nimport {browserHistory, withRouter} from 'react-router';\n//Contexts\nimport { ThemeProvider } from './contexts/ThemeContext'\nimport { UserProvider } from './contexts/UserContext'\n\nclass App extends Component {\n\n  componentWillMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      window.scrollTo(0,0)\n    });\n  }\n  componentWillUnmount() {\n      this.unlisten();\n  }\n  render(){\n    return (\n      <ThemeProvider>\n        <UserProvider>\n          <LayoutRoute exact path='/' component={Home} />\n          <LayoutRoute exact path='/repo/:name' component={Repo} />\n          <LayoutRoute exact path='/repo/:name/commit/:sha' component={Commit} />\n        </UserProvider>\n      </ThemeProvider>\n    )\n  }\n}\nexport default  withRouter(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={baseUrl}>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}