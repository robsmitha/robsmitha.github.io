{"version":3,"sources":["services/api.service.js","services/github.service.js","contexts/UserContext.js","components/_layout/Header.js","components/_layout/NavMenu.js","components/_layout/LayoutRoute.js","components/_helpers/Loading.js","components/_helpers/UnDraw.js","components/_helpers/ErrorMessage.js","components/_helpers/Devicon.js","components/_helpers/MappedIcon.js","components/_helpers/LanguageIcon.js","components/_helpers/ResourceIcon.js","components/Home.js","components/Repo.js","components/_helpers/FileChangeStatus.js","components/Commit.js","contexts/ThemeContext.js","App.js","serviceWorker.js","index.js"],"names":["cache","sessionStorage","getItem","Map","JSON","parse","get","url","a","has","item","json","fetch","undefined","response","ok","set","cached_at","Date","getTime","setItem","stringify","Array","from","entries","console","log","endpoint","login","gitHubService","getUser","getUserRepos","getStarred","getRepo","repo","getCommits","getLanguages","getCommit","sha","UserContext","React","createContext","UserProvider","props","state","user","loading","success","data","this","setState","Provider","value","children","Component","UserConsumer","Consumer","Header","Card","className","CardHeader","to","src","avatar_url","alt","name","location","ListGroup","flush","hidden","icon","faHome","ListGroupItem","faExternalLinkAlt","href","target","rel","faGithub","faLinkedin","faFilePdf","NavMenu","toggleNavbar","collapsed","collapseNavbar","navHeight","document","querySelector","onload","navbar","clientHeight","style","paddingTop","Navbar","Container","NavbarBrand","tag","Link","onClick","NavbarToggler","faBars","faTimes","top","concat","id","NavItem","NavLink","Layout","window","includes","Row","Col","lg","md","LayoutRoute","component","rest","render","matchProps","Loading","message","role","UnDraw","width","innerWidth","svg","svgs","Math","floor","random","length","ErrorMessage","xs","aria-label","faExclamationTriangle","Devicon","ikey","MappedIcon","map","key","toLowerCase","LanguageIcon","language","ResourceIcon","resource","Home","repos","starred","title","filter","el","description","split","bio","r","index","CardBody","aria-labelledby","aria-describedby","replace","faArrowCircleRight","sort","b","updated_at","html_url","Repo","match","params","commits","languages","dates","reduce","groups","group","date","commit","committer","push","Object","keys","homepage","sm","faPlay","l","c","faLaptopCode","toDateString","gc","author","toLocaleTimeString","FileChangeStatus","color","status","Badge","Commit","aria-hidden","toLocaleString","files","stats","additions","deletions","f","blob_url","aria-labeledby","faFileCode","filename","faPlus","faMinus","ThemeContext","ThemeProvider","changeTheme","event","theme","App","unlisten","history","listen","action","scrollTo","exact","path","withRouter","Boolean","hostname","baseUrl","getElementsByTagName","getAttribute","rootElement","getElementById","ReactDOM","StrictMode","basename","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"+eACMA,EAA4C,OAApCC,eAAeC,QAAQ,SACnC,IAAIC,IAAIC,KAAKC,MAAMJ,eAAeC,QAAQ,WAC1C,IAAIC,IAEC,SAAeG,EAAtB,kC,4CAAO,WAAmBC,GAAnB,mBAAAC,EAAA,0DAGAR,EAAMS,IAAIF,GAHV,uBAIKG,EAAOV,EAAMM,IAAIC,GAJtB,kBAKQG,EAAKC,MALb,gCAUwBC,MAAML,GAV9B,eAWiBM,KADVC,EAVP,UAW8BA,EAASC,GAXvC,kCAYsBD,EAASH,OAZ/B,eAYSA,EAZT,OAaKX,EAAMgB,IAAIT,EAAK,CACXI,KAAMA,EACNM,WAAW,IAAIC,MAAOC,YAE1BlB,eAAemB,QAAQ,QAAShB,KAAKiB,UAAUC,MAAMC,KAAKvB,EAAMwB,aAjBrE,kBAkBYb,GAlBZ,0DAqBCc,QAAQC,IAAR,MArBD,iCAwBI,MAxBJ,2D,sBCFP,IAAMC,EAAW,yBACXC,EAAQ,YACDC,EAAgB,CACzBC,QASJ,WACI,OAAOxB,EAAI,GAAD,OAAIqB,EAAJ,kBAAsBC,KAThCG,aAYJ,WACI,OAAOzB,EAAI,GAAD,OAAIqB,EAAJ,kBAAsBC,EAAtB,uCAZVI,WAeJ,WACI,OAAO1B,EAAI,GAAD,OAAIqB,EAAJ,kBAAsBC,EAAtB,cAfVK,QAkBJ,SAAiBC,GACb,OAAO5B,EAAI,GAAD,OAAIqB,EAAJ,kBAAsBC,EAAtB,YAA+BM,KAlBzCC,WAqBJ,SAAoBD,GAChB,OAAO5B,EAAI,GAAD,OAAIqB,EAAJ,kBAAsBC,EAAtB,YAA+BM,EAA/B,cArBVE,aA4BJ,SAAsBF,GAClB,OAAO5B,EAAI,GAAD,OAAIqB,EAAJ,kBAAsBC,EAAtB,YAA+BM,EAA/B,gBA5BVG,UAuBJ,SAAmBH,EAAMI,GACrB,OAAOhC,EAAI,GAAD,OAAIqB,EAAJ,kBAAsBC,EAAtB,YAA+BM,EAA/B,oBAA+CI,MCjC7D,IAAMC,EAAcC,IAAMC,gBAEpBC,E,kDAEF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,CACFC,SAAS,EACTC,SAAS,EACTC,KAAM,OANC,E,gEAYfC,KAAKnB,Y,gKAIcD,EAAcC,U,OAA3BkB,E,OACNC,KAAKC,SAAS,CACVL,KAAM,CACFC,SAAS,EACTC,QAAkB,OAATC,EACTA,KAAMA,K,qIAMd,OACI,kBAACT,EAAYY,SAAb,CAAsBC,MAAO,CACzBP,KAAMI,KAAKL,MAAMC,OAEhBI,KAAKN,MAAMU,c,GAjCDC,aAuCrBC,EAAehB,EAAYiB,SCnCZC,E,kDACjB,WAAYd,GAAO,uCACTA,G,qDAGN,OACI,gCACI,kBAACY,EAAD,MACK,gBAAGV,EAAH,EAAGA,KAAH,OACG,kBAACa,EAAA,EAAD,CAAMC,UAAU,yBAChB,kBAACC,EAAA,EAAD,CAAYD,UAAU,sCAClB,kBAAC,IAAD,CAAME,GAAI,KACN,0BAAMF,UAAU,WAAhB,mBACA,yBAAKA,UAAU,iFAAiFG,KAAMjB,EAAKC,SAAWD,EAAKE,SAAoC,OAAzBF,EAAKG,KAAKe,WACzIlB,EAAKG,KAAKe,WACX,6EAA8EjB,QAAQ,OACxFkB,IAAI,MAEZ,6BACMnB,EAAKC,SAAWD,EAAKE,QACrBF,EAAKG,KAAKiB,KACV,cAEN,uBAAGN,UAAU,4BACXd,EAAKC,SAAWD,EAAKE,QACrBF,EAAKG,KAAKkB,SACV,kBAGN,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAAC,IAAD,CAAMP,GAAI,IAAKF,UAAU,yCAAyCU,QAAQ,GACtE,kBAAC,IAAD,CAAiBC,KAAMC,IAAQZ,UAAU,mBAD7C,aAIA,kBAACa,EAAA,EAAD,CAAeb,UAAU,oBACrB,kBAAC,IAAD,CAAiBW,KAAMG,MAD3B,uBAIA,uBAAGC,KAAK,+BAA+BC,OAAO,SAAShB,UAAU,yCAAyCiB,IAAI,uBAC1G,kBAAC,IAAD,CAAiBN,KAAMO,IAAUlB,UAAU,gBAD/C,OAEI,0BAAMA,UAAU,WAAhB,gBAFJ,UAKA,uBAAGe,KAAK,yCAAyCC,OAAO,SAAShB,UAAU,yCAAyCiB,IAAI,uBACpH,kBAAC,IAAD,CAAiBN,KAAMQ,IAAYnB,UAAU,kBADjD,OAEI,0BAAMA,UAAU,WAAhB,gBAFJ,YAKA,uBAAGe,KAAK,oFAAoFC,OAAO,SAAShB,UAAU,yCAAyCiB,IAAI,uBAC/J,kBAAC,IAAD,CAAiBN,KAAMS,IAAWpB,UAAU,gBADhD,OAEI,0BAAMA,UAAU,WAAhB,gBAFJ,0B,GAhDQL,a,gDCAf0B,E,kDACjB,WAAYrC,GAAQ,IAAD,8BACf,cAAMA,IAeVsC,aAAe,WACX,EAAK/B,SAAS,CACVgC,WAAY,EAAKtC,MAAMsC,aAlBZ,EAsBnBC,eAAiB,WACb,EAAKjC,SAAS,CAAEgC,WAAW,KArB3B,EAAKtC,MAAQ,CACTsC,WAAW,EACXE,UAAW,IAJA,E,gEAQC,IAAD,OACAC,SAASC,cAAc,WAC/BC,OAAS,WACZ,IAAMC,EAASH,SAASC,cAAc,aACtC,EAAKpC,SAAS,CAAEkC,UAAsB,OAAXI,EAAkBA,EAAOC,aAAe,Q,+BAclE,IAAD,OACJ,OACI,kBAAClC,EAAD,MACC,gBAAGV,EAAH,EAAGA,KAAH,OACD,6BAASc,UAAU,kBAAkB+B,MAAO,CAACC,WAAY,EAAK/C,MAAMwC,UAAY,OAC5E,kBAACQ,EAAA,EAAD,CAAQjC,UAAU,+EACd,kBAACkC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAanC,UAAU,kBAAkBoC,IAAKC,IAAMnC,GAAG,IAAIoC,QAAS,EAAKd,gBACrE,yBAAKxB,UAAU,SACf,yBAAKA,UAAU,8CACXG,KAAMjB,EAAKC,SAAWD,EAAKE,SAAoC,OAAzBF,EAAKG,KAAKe,WAC7ClB,EAAKG,KAAKe,WACX,+EAJN,OAMI,yBAAKJ,UAAU,cACX,0BAAMA,UAAU,WAAhB,cACA,2BAAOA,UAAU,sBAAjB,wBAIZ,kBAACuC,EAAA,EAAD,CAAevC,UAAU,eAAesC,QAAS,EAAKhB,cAClD,kBAAC,IAAD,CAAiBX,KAAM,EAAK1B,MAAMsC,UAAYiB,IAASC,OAE3D,yBAAKV,MAAO,CAAEW,IAAK,EAAKzD,MAAMwC,UAAY,MAC1CzB,UAAW,+CAA+C2C,OAAQ,EAAK1D,MAAMsC,UAAsB,GAAV,SACzFqB,GAAG,yBACC,wBAAI5C,UAAU,qBAAqBU,QAAQ,GACvC,kBAACmC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASV,IAAKC,IAAMnC,GAAI,IAAKoC,QAAS,EAAKd,gBACvC,kBAAC,IAAD,CAAiBb,KAAMC,IAAQZ,UAAU,mBAD7C,cAKR,wBAAIA,UAAU,sBACV,wBAAIA,UAAU,gCACV,kBAAC,IAAD,CAAiBW,KAAMG,MAD3B,uBAIA,wBAAId,UAAU,YACV,uBAAGe,KAAK,+BAA+BC,OAAO,SAAShB,UAAU,WAAWiB,IAAI,uBAChF,kBAAC,IAAD,CAAiBN,KAAMO,IAAUlB,UAAU,gBAD3C,eAIJ,wBAAIA,UAAU,YACV,uBAAGe,KAAK,yCAAyCC,OAAO,SAAShB,UAAU,WAAWiB,IAAI,uBAC1F,kBAAC,IAAD,CAAiBN,KAAMQ,IAAYnB,UAAU,kBAD7C,iBAIJ,wBAAIA,UAAU,YACV,uBAAGe,KAAK,oFAAoFC,OAAO,SAASC,IAAI,sBAAsBjB,UAAU,YAChJ,kBAAC,IAAD,CAAiBW,KAAMS,IAAWpB,UAAU,gBAD5C,iC,GA5ECL,aCH/BoD,EAAS,SAAC,GAAkB,IAAhBrD,EAAe,EAAfA,SACd,OAAO,iCACP,uBAAGM,UAAU,uCAAuCe,KAAMiC,OAAOzC,SAASQ,KAAKkC,SAAS,SAAWD,OAAOzC,SAASQ,KAAOiC,OAAOzC,SAASQ,KAAK4B,OAAO,SAAUjC,QAAQ,GAAxK,wBACA,kBAAC,EAAD,MACA,kBAACwB,EAAA,EAAD,CAAWlC,UAAU,gBACjB,kBAACkD,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,IAAIrD,UAAU,qBACzB,kBAAC,EAAD,OAEJ,kBAACmD,EAAA,EAAD,CAAKC,GAAG,IAAIC,GAAG,KACX,0BAAMT,GAAG,QACRlD,QAkBF4D,EAVK,SAAC,GAAuC,IAA1B3D,EAAyB,EAApC4D,UAAyBC,EAAW,6BACvD,OACI,kBAAC,IAAD,iBAAWA,EAAX,CAAiBC,OAAQ,SAAAC,GAAU,OAC/B,kBAAC,EAAD,KACI,kBAAC/D,EAAc+D,SCfhBC,G,MAZC,SAAA3E,GACZ,IAAI4E,OAA4B1G,IAAlB8B,EAAM4E,QAAwB5E,EAAM4E,QAAU,GAC5D,OACI,8BACI,0BAAM5D,UAAU,eAAe6D,KAAK,UAChC,0BAAM7D,UAAU,WAAhB,eAEH4D,K,QC8BEE,EA3BA,SAAA9E,GACX,IAAM+E,EAAQf,OAAOgB,WAAa,IAAM,QAAU,QAE9CC,EAAM,GACV,OAAOjF,EAAMiF,KACT,UAAK/G,EACL,KAAK,KACL,IAAK,GACD,IAAMgH,EAAO,CAlBO,0BACE,2BACH,yBACF,qBACM,6BACD,2BACJ,sBACC,wBACH,SAqBhBD,EAAMC,EAAKC,KAAKC,MAAMD,KAAKE,SAAWH,EAAKI,SAC3C,MACJ,QACIL,EAAMjF,EAAMiF,IAGpB,OAAO,uCAAKF,MAAOA,EAAO5D,IAvBV,uEAuByB8D,EAAM,OAAQ5D,IAAI,IAAOrB,KCTvDuF,EArBM,SAAAvF,GACjB,IAAI4E,OAA4B1G,IAAlB8B,EAAM4E,QAAwB5E,EAAM4E,QAAU,GAC5D,OACI,kBAACV,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKqB,GAAG,MACJ,kBAAC,EAAD,CAAQxE,UAAU,qBAEtB,kBAACmD,EAAA,EAAD,CAAKqB,GAAG,MACJ,kBAACtB,EAAA,EAAD,CAAKlD,UAAU,mDACX,kBAACmD,EAAA,EAAD,KACI,uBAAGnD,UAAU,mCAAmCyE,aAAYb,GACxD,kBAAC,IAAD,CAAiBjD,KAAM+D,MAD3B,OAEKd,QCiBde,EAhBC,SAAA3F,GACZ,IAAI2B,EAAO,GACX,OAAO3B,EAAM2B,MACT,UAAKzD,EACL,KAAK,KACL,IAAK,GACDyD,EAlBkC,4BAmBlC,MACJ,QACIA,EAAO3B,EAAM2B,KAIrB,OAAO,uCAAKR,IADI,yEACWQ,EAAO,OAAQN,IAAK,kBAAkBsC,OAAO3D,EAAM4F,OAAW5F,KCjB9E6F,EAZI,SAAA7F,GACf,IAAI2B,EAAO,KACX,QAAiBzD,IAAd8B,EAAM8F,UAAoC5H,IAAf8B,EAAM4F,MAAoC,OAAd5F,EAAM8F,KAA+B,OAAf9F,EAAM4F,KAAgB,CAClG,IAAME,EAAM9F,EAAM8F,IACZC,EAAM/F,EAAM4F,KAAKI,cACpBF,EAAIhI,IAAIiI,KACPpE,EAAOmE,EAAInI,IAAIoI,IAGvB,OAAO,kBAAC,EAAD,eAASpE,KAAMA,GAAU3B,KCcrBiG,EAhBM,SAAAjG,GACjB,IAAMkG,OAA8BhI,IAAnB8B,EAAMkG,UAA8C,OAAnBlG,EAAMkG,SAAoBlG,EAAMkG,SAASF,cAAgB,KACrGF,EAAM,IAAItI,IAAI,CAChB,CAAC,KFX4B,mBEY7B,CAAC,aFX6B,oBEY9B,CAAC,MFX0B,0BEY3B,CAAC,OFX2B,2BEY5B,CAAC,aFXgC,yBEarC,OAAO,kBAAC,EAAD,eACHoI,KAAMM,EACFJ,IAAKA,GACD9F,KCsBDmG,EA5BM,SAAAnG,GAAU,IACnBoG,EAAuBpG,EAAvBoG,SAAUF,EAAalG,EAAbkG,SACZJ,EAAM,IAAItI,IAAI,CAChB,CAAC,cHlBuC,8BGmBxC,CAAC,QHZ2B,kBGa5B,CAAC,YHZoC,4BGarC,CAAC,aHXyB,iBGY1B,CAAC,UHX4B,mBGY7B,CAAC,QHX2B,kBGY5B,CAAC,wBHZ2B,kBGa5B,CAAC,MHV2B,kBGW5B,CAAC,MHX2B,kBGY5B,CAAC,UHZ2B,kBGa5B,CAAC,OHd0B,iBGe3B,CAAC,OHb4B,mBGc7B,CAAC,qBHjB6B,sBGmBlC,YAAgBU,IAAbkI,GAAuC,OAAbA,GAAqBN,EAAIhI,IAAIsI,GAC/C,kBAAC,EAAD,eACCR,KAAMQ,EACNN,IAAKA,GACD9F,IAIT,kBAAC,EAAD,eAAckG,SAAUA,GAAclG,KC7B5BqG,E,kDACjB,WAAYrG,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTqG,MAAO,CACHnG,SAAS,EACTC,SAAS,EACTC,KAAM,MAEVkG,QAAS,CACLpG,SAAS,EACTC,SAAS,EACTC,KAAM,OAXA,E,gEAiBdqC,SAAS8D,MAAQ,yBACjBlG,KAAKlB,eACLkB,KAAKjB,e,yKAIcH,EAAcE,e,OAA3BiB,E,OAEAiG,GADAlG,EAAmB,OAATC,GACQA,EAAKoG,QAAO,SAACC,GAAD,OAA2B,OAAnBA,EAAGC,aAAwBD,EAAGC,YAAYrB,OAAS,KAAK,GAChGhF,KAAKC,SAAS,CACV+F,MAAO,CACHnG,SAAS,EACTC,QAASA,EACTC,KAAMiG,K,yQAMCpH,EAAcG,a,OAA3BgB,E,OACNC,KAAKC,SAAS,CACVgG,QAAS,CACLpG,SAAS,EACTC,QAAkB,OAATC,EACTA,KAAMA,K,qIAKT,IAAD,EACuBC,KAAKL,MAAxBqG,EADJ,EACIA,MAAOC,EADX,EACWA,QACf,OACI,kBAAC3F,EAAD,MACK,gBAAGV,EAAH,EAAGA,KAAH,OACD,6BACI,uBAAGc,UAAU,iCAAb,WAGA,wBAAIA,UAAU,SACRd,EAAKC,SAAWD,EAAKE,SAA8B,OAAnBF,EAAKG,KAAKiB,KAC1C,4CAAkBpB,EAAKG,KAAKiB,KAAKsF,MAAM,KAAK,GAA5C,KACA,kDAGL1G,EAAKC,QACJ,kBAAC,EAAD,CAASyE,QAAQ,gCAChB0B,EAAMlG,QAEH,uBAAGY,UAAU,wBAAwBd,EAAKG,KAAKwG,KAD/C,uBAAG7F,UAAU,wBAAb,wDAEN,6BACA,uBAAGA,UAAU,iCAAb,YAGA,wBAAIA,UAAU,WAAd,gBACA,yBAAKA,UAAU,QACX,kBAACkD,EAAA,EAAD,KACCoC,EAAMnG,QACD,kBAAC,EAAD,CAASyE,QAAQ,iCAChB0B,EAAMlG,QAIPkG,EAAMjG,KAAKyF,KAAI,SAACgB,EAAGC,GAAJ,OACjB,kBAAC5C,EAAA,EAAD,CAAKE,GAAG,IAAI0B,IAAKe,EAAExF,KAAMN,UAAU,QAC/B,kBAACD,EAAA,EAAD,CAAMC,UAAU,SACZ,kBAACgG,EAAA,EAAD,CAAUhG,UAAU,qBAAqBiG,kBAAiB,aAAatD,OAAOoD,GAAQG,mBAAkB,oBAAoBvD,OAAOoD,IAC/H,uBAAGnD,GAAI,aAAaD,OAAOoD,IACtBD,EAAExF,KADP,OACkB,kBAAC,EAAD,CAAcN,UAAU,iCAAiCkF,SAAUY,EAAEZ,YAGvF,uBAAGtC,GAAI,oBAAoBD,OAAOoD,GAAQ/F,UAAU,qCAC/C8F,EAAEH,aAGP,yBAAK3F,UAAU,WACX,kBAAC,IAAD,CAAMA,UAAU,wBAAwBE,GAAI,cAAciG,QAAQ,QAASL,EAAExF,OAA7E,kBACmB,0BAAMN,UAAU,WAAhB,OAA+B8F,EAAExF,MAChD,kBAAC,IAAD,CAAiBN,UAAU,mBAAmBW,KAAMyF,cAlBtE,kBAACjD,EAAA,EAAD,KACE,kBAAC,EAAD,CAAcS,QAAQ,4BAyBlC,6BACA,uBAAG5D,UAAU,iCAAb,SAGA,wBAAIA,UAAU,WAAd,aAGA,yBAAKA,UAAU,QACf,yBAAKA,UAAU,gBACNuF,EAAQpG,QACP,kBAAC,EAAD,CAASyE,QAAQ,iCAChB2B,EAAQnG,QAITmG,EAAQlG,KAAKgH,MAAK,SAACxJ,EAAEyJ,GAAH,OAAS,IAAI/I,KAAK+I,EAAEC,YAAc,IAAIhJ,KAAKV,EAAE0J,eAChEzB,KAAI,SAACgB,EAAGC,GAAJ,OACL,kBAAChG,EAAA,EAAD,CAAMgF,IAAKe,EAAExF,MACT,kBAAC0F,EAAA,EAAD,CAAUC,kBAAiB,iBAAiBtD,OAAOoD,GAAQG,mBAAkB,wBAAwBvD,OAAOoD,IACxG,uBAAGnD,GAAI,iBAAiBD,OAAOoD,GAAQ/F,UAAU,SAC5C8F,EAAExF,KACH,kBAAC,EAAD,CAAcN,UAAU,iCAAiCoF,SAAUU,EAAExF,KAAM4E,SAAUY,EAAEZ,YAE3F,uBAAGtC,GAAI,wBAAwBD,OAAOoD,GAAQ/F,UAAU,qCACnD8F,EAAEH,aAEP,yBAAK3F,UAAU,sBACX,uBAAGgB,OAAO,SACVD,KAAM+E,EAAEU,SACRvF,IAAI,uBACA,0BAAMjB,UAAU,WAAW8F,EAAExF,KAA7B,6BACA,kBAAC,IAAD,CAAiBK,KAAMG,aAnBrC,kBAACf,EAAA,EAAD,KACE,kBAAC,EAAD,CAAc6D,QAAQ,qC,GApHpBjE,aCFb8G,G,kDACjB,WAAYzH,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAQ,CACTqB,KAAM,EAAKtB,MAAM0H,MAAMC,OAAOrG,KAC9B/B,KAAM,CACFY,SAAS,EACTC,SAAS,EACTC,KAAM,MAEVuH,QAAS,CACLzH,SAAS,EACTC,SAAS,EACTC,KAAM,MAEVwH,UAAW,CACP1H,SAAS,EACTC,SAAS,EACTC,KAAM,OAjBA,E,gEAuBdC,KAAKhB,UACLgB,KAAKb,eACLa,KAAKd,e,gKAIcN,EAAcI,QAAQgB,KAAKL,MAAMqB,M,QAA9CjB,E,UAEFqC,SAAS8D,MAAT,uBAAiCnG,EAAKiB,OAE1ChB,KAAKC,SAAS,CACVhB,KAAM,CACFY,SAAS,EACTC,QAAkB,OAATC,EACTA,KAAMA,K,6QAMKnB,EAAcM,WAAWc,KAAKL,MAAMqB,M,OAAjDjB,E,OAEAyH,EAAiB,OAATzH,EAAgBA,EAAK0H,QAAO,SAACC,EAAQC,GAC/C,IAAMC,EAAOD,EAAME,OAAOC,UAAUF,KAAKtB,MAAM,KAAK,GAKpD,OAJKoB,EAAOE,KACRF,EAAOE,GAAQ,IAEnBF,EAAOE,GAAMG,KAAKJ,GACXD,IACR,IACD,GAEIJ,EAAUU,OAAOC,KAAKT,GAAOhC,KAAI,SAACoC,GACpC,MAAO,CACPA,OACAN,QAASE,EAAMI,OAInB5H,KAAKC,SAAS,CACVqH,QAAS,CACLzH,SAAS,EACTC,QAAqB,OAAZwH,EACTvH,KAAMuH,K,2QAMK1I,EAAcO,aAAaa,KAAKL,MAAMqB,M,OAAnDjB,E,OACNC,KAAKC,SAAS,CACVsH,UAAW,CACP1H,SAAS,EACTC,QAAkB,OAATC,EACTA,KAAMA,K,qIAKT,IAAD,EACuCC,KAAKL,MAAxCV,EADJ,EACIA,KAAM+B,EADV,EACUA,KAAMuG,EADhB,EACgBA,UAAWD,EAD3B,EAC2BA,QAC/B,OACI,6BAEI,yBAAK5G,UAAU,QACX,kBAAC,IAAD,CAAME,GAAI,KAAV,QADJ,WACsD,OAAd3B,EAAKc,KAAgBd,EAAKc,KAAKiB,KAAOA,GAE9E,yBAAKN,UAAU,QACX,uBAAGA,UAAU,iCAAb,cAGCzB,EAAKY,QACJ,kBAAC,EAAD,CAASyE,QAAQ,gCAChBrF,EAAKa,QAEN,yBAAK6G,kBAAgB,kBAAkBC,mBAAiB,0BACtD,wBAAItD,GAAG,kBAAkB5C,UAAU,gBAC9BzB,EAAKc,KAAKiB,MAEf,uBAAGsC,GAAG,yBAAyB5C,UAAU,aACpCzB,EAAKc,KAAKsG,aAEf,kBAACzC,EAAA,EAAD,KACwB,OAAvB3E,EAAKc,KAAKmI,UAAqBjJ,EAAKc,KAAKmI,SAASlD,OAAS,EACxD,kBAACnB,EAAA,EAAD,CAAKqB,GAAG,KAAKiD,GAAG,KACZ,uBAAGzH,UAAU,8BAA8Be,KAAMxC,EAAKc,KAAKmI,SAAUxG,OAAO,SAASC,IAAI,uBACrF,kBAAC,IAAD,CAAiBjB,UAAU,eAAeW,KAAM+G,MADpD,OACqEnJ,EAAKc,KAAKiB,OAGjF,GACF,kBAAC6C,EAAA,EAAD,CAAKqB,GAAG,KAAKiD,GAAG,KACZ,uBAAG1G,KAAMxC,EAAKc,KAAKmH,SAAUxG,UAAU,0BAA0BgB,OAAO,SAASC,IAAI,uBACjF,kBAAC,IAAD,CAAiBN,KAAMO,MAD3B,4BAKR,8BAtBF,kBAAC,EAAD,CAAc0C,QAAQ,0BAyB5B,yBAAK5D,UAAU,OAAOiG,kBAAgB,aAClC,uBAAGrD,GAAG,YAAY5C,UAAU,iCAA5B,aAGA,wBAAIA,UAAU,gBAAd,aACC6G,EAAU1H,QACT,kBAAC,EAAD,CAASyE,QAAQ,qCAChBiD,EAAUzH,QAEX,6BACE,kBAAC8D,EAAA,EAAD,KACKoE,OAAOC,KAAKV,EAAUxH,MAAMyF,KAAI,SAAC6C,EAAG5B,GAAJ,OACjC,kBAAC5C,EAAA,EAAD,CAAK4B,IAAK4C,EAAG3H,UAAU,iCACnB,kBAAC,EAAD,CAAcA,UAAU,uCAAuCkF,SAAUyC,IACzE,0BAAM1B,kBAAiB,sBAAsBtD,OAAOoD,GAAQG,mBAAkB,sBAAsBvD,OAAOoD,IACvG,0BAAMnD,GAAI,sBAAsBD,OAAOoD,GAAQ/F,UAAU,WAAW,YAAY2C,OAAOgF,EAAG,UAC1F,2BAAO/E,GAAI,sBAAsBD,OAAOoD,GAAQ/F,UAAU,mBAAmB6G,EAAUxH,KAAKsI,WARzG,kBAAC,EAAD,CAAc/D,QAAQ,+BAc7B,6BAEA,yBAAK5D,UAAU,OAAOiG,kBAAgB,yBAClC,uBAAGjG,UAAU,iCAAb,WAGA,wBAAI4C,GAAG,wBAAwB5C,UAAU,gBACrC,0BAAMA,UAAU,WAAhB,iBADJ,YAIH4G,EAAQzH,QACN,kBAAC,EAAD,CAASyE,QAAQ,mCACjBgD,EAAQxH,QAET,6BACE,yBAAKY,UAAU,0CACV4G,EAAQvH,KAAKyF,KAAI,SAAC8C,EAAG7B,GAAJ,OAClB,yBAAKhB,IAAK6C,EAAEV,MACR,yBAAKlH,UAAU,qBAAqBiG,kBAAiB,gBAAgBtD,OAAOoD,IACxE,kBAAC,IAAD,CAAiB/F,UAAU,aAAaW,KAAMkH,MAC9C,2BAAOjF,GAAI,gBAAgBD,OAAOoD,IAC9B,0BAAM/F,UAAU,WAAhB,cACC,IAAIzC,KAAKqK,EAAEV,MAAMY,iBAG1B,yBAAK9H,UAAU,uCACX,kBAACQ,EAAA,EAAD,KACKoH,EAAEhB,QAAQ9B,KAAI,SAACiD,EAAIhC,GAAL,OACX,kBAAC,IAAD,CAAMhB,IAAKgD,EAAGpJ,IAAKqB,UAAU,yCAC7BE,GAAI,0BAA0BiG,QAAQ,QAAS7F,GAAM6F,QAAQ,OAAQ4B,EAAGpJ,MACpE,yBAAKqB,UAAU,SACX,yBAAKK,IAAK,GACVF,IAAmB,OAAd4H,EAAGC,OAAkBD,EAAGC,OAAO5H,WAA8B,OAAjB2H,EAAGX,UAAqBW,EAAGX,UAAUhH,WAAa,GACnGJ,UAAU,yCAHd,OAII,yBAAKA,UAAU,aAAaiG,kBAAiB,gBAAgBtD,OAAOoD,GAAQG,mBAAkB,kBAAkBvD,OAAOoD,IACnH,gCAAY/F,UAAU,cAClB,2BAAO4C,GAAI,kBAAkBD,OAAOoD,GAAQ/F,UAAU,2BACjD+H,EAAGZ,OAAOvD,SAEf,yBAAK5D,UAAU,0BAA0B4C,GAAI,gBAAgBD,OAAOoD,IAC/DgC,EAAGC,OAAO/J,MAAM,0BAAM+B,UAAU,WAAhB,kBADrB,UAEI,8BAAO,IAAIzC,KAAKwK,EAAGZ,OAAOa,OAAOd,MAAMe,sCA5BjF,kBAAC,EAAD,CAAcrE,QAAQ,kC,GA9JNjE,a,SCYnBuI,GApBU,SAAAlJ,GACrB,IAAImJ,EAAQ,QACZ,OAAOnJ,EAAMoJ,OAAOpD,eAChB,IAAK,WACDmD,EAAQ,UACR,MACJ,IAAK,UACDA,EAAQ,QACR,MACJ,IAAK,QACDA,EAAQ,UACR,MACJ,IAAK,UACLA,EAAQ,SAIZ,OAAO,8BAAM,0BAAMnI,UAAU,WAAhB,WAAwC,kBAACqI,GAAA,EAAD,eAAOF,MAAOA,GAAWnJ,GAAQA,EAAMoJ,UCT3EE,G,kDACjB,WAAYtJ,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTqB,KAAM,EAAKtB,MAAM0H,MAAMC,OAAOrG,KAC9B3B,IAAK,EAAKK,MAAM0H,MAAMC,OAAOhI,IAC7BwI,OAAQ,CACJhI,SAAS,EACTC,SAAS,EACTC,KAAM,OARC,E,gEAcfqC,SAAS8D,MAAT,8BAAwClG,KAAKL,MAAMN,KACnDW,KAAKZ,c,iKAIiBY,KAAKL,MAAnBqB,E,EAAAA,KAAM3B,E,EAAAA,I,SACKT,EAAcQ,UAAU4B,EAAM3B,G,OAA3CU,E,OACNC,KAAKC,SAAS,CACV4H,OAAQ,CACJhI,SAAS,EACTC,QAAkB,OAATC,EACTA,KAAMA,K,qIAKT,IAAD,EACwBC,KAAKL,MAA1BkI,EADH,EACGA,OAAQ7G,EADX,EACWA,KAAM3B,EADjB,EACiBA,IACrB,OACI,yBAAKqB,UAAU,SACX,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAME,GAAI,KAAV,QADJ,iBAEI,kBAAC,IAAD,CAAMA,GAAI,cAAciG,QAAQ,QAAS7F,IAAQA,GAFrD,iBAGI,0BAAMN,UAAU,aAAauI,cAAY,QACrC,0BAAMvI,UAAU,WAAhB,cACCrB,IAGT,yBAAKqB,UAAU,QACf,uBAAGA,UAAU,iCAAb,UAGCmH,EAAOhI,QACN,kBAAC,EAAD,CAASyE,QAAQ,kCAChBuD,EAAO/H,QAUR,6BACE,wBAAIY,UAAU,gBAAd,WAIA,gCAAYA,UAAU,aAAaiG,kBAAgB,eAAeC,mBAAiB,kBAC/E,uBAAGtD,GAAG,iBAAiB5C,UAAU,aAAamH,EAAO9H,KAAK8H,OAAOvD,SACjE,yBAAKhB,GAAG,eAAe5C,UAAU,qBAC5BmH,EAAO9H,KAAK8H,OAAOC,UAAU9G,KAAK,0BAAMN,UAAU,WAAhB,kBADvC,UAEI,8BAAO,IAAIzC,KAAK4J,EAAO9H,KAAK8H,OAAOC,UAAUF,MAAMsB,oBAG3D,6BACA,uBAAGxI,UAAU,iCAAb,SAGA,wBAAIA,UAAU,gBAAd,WAGA,yBAAKiG,kBAAgB,qBACjB,uBAAGjG,UAAU,YAAY4C,GAAG,qBAA5B,WACY,gCAASuE,EAAO9H,KAAKoJ,MAAMnE,OAA3B,mBADZ,QAES,4BAAQtE,UAAU,gBAAgBmH,EAAO9H,KAAKqJ,MAAMC,UAApD,eAFT,OAGQ,4BAAQ3I,UAAU,eAAemH,EAAO9H,KAAKqJ,MAAME,UAAnD,iBAGZ,kBAACpI,EAAA,EAAD,CAAWC,OAAK,GACX0G,EAAO9H,KAAKoJ,MAAM3D,KAAI,SAAC+D,EAAG9C,GAAJ,OACvB,uBAAG/E,OAAO,SAASC,IAAI,sBAAsBF,KAAM8H,EAAEC,SAAU9I,UAAU,8CAA8C+E,IAAKgB,EAC5HgD,iBAAgB,aAAapG,OAAOoD,GAAQG,mBAAkB,gBAAgBvD,OAAOoD,IACjF,0BAAM/F,UAAU,WACZ,2BAAOA,UAAU,eAAc,kBAAC,IAAD,CAAiBW,KAAMqI,MAAtD,QACA,0BAAMhJ,UAAU,cAAc6I,EAAEI,WAEpC,yBAAKrG,GAAI,gBAAgBD,OAAOoD,IAC5B,kBAAC,GAAD,CAAkBqC,OAAQS,EAAET,SADhC,OAEI,0BAAMpI,UAAU,gBACZ,kBAAC,IAAD,CAAiBW,KAAMuI,MAD3B,OAC4CL,EAAEF,UAD9C,OAEI,0BAAM3I,UAAU,WAAhB,cAEJ,0BAAMA,UAAU,eACZ,kBAAC,IAAD,CAAiBW,KAAMwI,MAD3B,OAC6CN,EAAED,UAC3C,0BAAM5I,UAAU,WAAhB,mBAKZ,uBAAGe,KAAMoG,EAAO9H,KAAKmH,SAAUxG,UAAU,yCAAyCgB,OAAO,SAASC,IAAI,uBAClG,kBAAC,IAAD,CAAiBN,KAAMO,MAD3B,mCAxDN,6BACE,wBAAIlB,UAAU,gBACbM,EADD,MACU3B,GAEV,kBAAC,EAAD,CAAQgC,KAAK,0BACb,uBAAGX,UAAU,aAAb,qC,GAvDgBL,aCT9ByJ,GAAevK,IAAMC,gBAErBuK,G,kDAEF,WAAYrK,GAAQ,IAAD,8BACf,cAAMA,IAMVsK,YAAc,SAAAC,GACV,IAAIC,EAAQD,EAAMvI,OAAOvB,MACzB3B,QAAQC,IAAIyL,GACZ,EAAKjK,SAAS,CACViK,MAAOA,KATX,EAAKvK,MAAQ,CACTuK,MAAO,MAHI,E,qDAgBf,OACI,kBAACJ,GAAa5J,SAAd,CAAuBC,MAAO,CAC1B+J,MAAOlK,KAAKL,MAAMuK,MAClBF,YAAahK,KAAKgK,cAEjBhK,KAAKN,MAAMU,c,GAvBAC,aCWtB8J,IDkBgBL,GAAavJ,S,mLCf/BP,KAAKoK,SAAWpK,KAAKN,MAAM2K,QAAQC,QAAO,SAACrJ,EAAUsJ,GACnD7G,OAAO8G,SAAS,EAAE,Q,6CAIlBxK,KAAKoK,a,+BAGP,OACE,kBAAC,GAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAaK,OAAK,EAACC,KAAK,IAAIzG,UAAW8B,IACvC,kBAAC,EAAD,CAAa0E,OAAK,EAACC,KAAK,cAAczG,UAAWkD,KACjD,kBAAC,EAAD,CAAasD,OAAK,EAACC,KAAK,0BAA0BzG,UAAW+E,W,GAhBrD3I,cAsBFsK,eAAWR,ICzBPS,QACW,cAA7BlH,OAAOzC,SAAS4J,UAEe,UAA7BnH,OAAOzC,SAAS4J,UAEhBnH,OAAOzC,SAAS4J,SAASzD,MACvB,2D,UCVA0D,GAAU1I,SAAS2I,qBAAqB,QAAQ,GAAGC,aAAa,QAChEC,GAAc7I,SAAS8I,eAAe,QAE5CC,IAAShH,OACP,kBAAC,IAAMiH,WAAP,KACE,kBAAC,IAAD,CAAeC,SAAUP,IACzB,kBAAC,GAAD,QAGFG,IDkHI,kBAAmBK,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLrN,QAAQqN,MAAMA,EAAMvH,c","file":"static/js/main.80a2ce0e.chunk.js","sourcesContent":["\r\nconst cache = sessionStorage.getItem('cache') !== null \r\n? new Map(JSON.parse(sessionStorage.getItem('cache')))\r\n: new Map()\r\n\r\nexport async function get(url) {\r\n    \r\n    //check cache\r\n    if(cache.has(url)){\r\n        let item = cache.get(url)\r\n        return item.json \r\n    }\r\n\r\n    //do request\r\n    try {\r\n        const response = await fetch(url)\r\n        if(response !== undefined && response.ok){\r\n            let json = await response.json()\r\n            cache.set(url, {\r\n                json: json,\r\n                cached_at: new Date().getTime()\r\n            })\r\n            sessionStorage.setItem('cache', JSON.stringify(Array.from(cache.entries())))\r\n            return json;\r\n        }\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n\r\n    return null;\r\n}","import { get } from './api.service'\r\n\r\n\r\nconst endpoint = 'https://api.github.com'\r\nconst login = 'robsmitha'\r\nexport const gitHubService = {\r\n    getUser,\r\n    getUserRepos,\r\n    getStarred,\r\n    getRepo,\r\n    getCommits,\r\n    getLanguages,\r\n    getCommit\r\n};\r\n\r\nfunction getUser() {\r\n    return get(`${endpoint}/users/${login}`)\r\n}\r\n\r\nfunction getUserRepos() {\r\n    return get(`${endpoint}/users/${login}/repos?sort=pushed&direction=desc`)\r\n}\r\n\r\nfunction getStarred(){\r\n    return get(`${endpoint}/users/${login}/starred`)\r\n}\r\n\r\nfunction getRepo(repo){\r\n    return get(`${endpoint}/repos/${login}/${repo}`)\r\n}\r\n\r\nfunction getCommits(repo){\r\n    return get(`${endpoint}/repos/${login}/${repo}/commits`)\r\n}\r\n\r\nfunction getCommit(repo, sha){\r\n    return get(`${endpoint}/repos/${login}/${repo}/commits/${sha}`)\r\n}\r\n\r\nfunction getLanguages(repo){\r\n    return get(`${endpoint}/repos/${login}/${repo}/languages`)\r\n}","import React, { Component } from 'react';\r\nimport { gitHubService } from './../services/github.service';\r\n\r\nconst UserContext = React.createContext();\r\n\r\nclass UserProvider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props) \r\n        this.state = {\r\n            user: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getUser()\r\n    }\r\n\r\n    async getUser(){\r\n        const data = await gitHubService.getUser()\r\n        this.setState({\r\n            user: {\r\n                loading: false,\r\n                success: data !== null,\r\n                data: data\r\n            }\r\n        })\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <UserContext.Provider value={{\r\n                user: this.state.user\r\n            }}>\r\n                {this.props.children}\r\n            </UserContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst UserConsumer = UserContext.Consumer\r\n\r\nexport { UserProvider, UserConsumer, UserContext }","import React, { Component } from 'react';\r\nimport { Card, CardHeader, CardBody, Badge, ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './Header.css'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faFilePdf, faExternalLinkAlt, faHome } from '@fortawesome/free-solid-svg-icons'\r\nimport { faLinkedin, faGithub } from \"@fortawesome/free-brands-svg-icons\"\r\nimport { UserConsumer } from '../../contexts/UserContext';\r\n\r\nexport default class Header extends Component {\r\n    constructor(props){\r\n        super(props)\r\n    }\r\n    render(){\r\n        return(\r\n            <header>\r\n                <UserConsumer>\r\n                    {({ user }) => (\r\n                        <Card className=\"border-0 mb-5 mb-lg-0\">\r\n                        <CardHeader className=\"bg-white py-4 border-0 text-center\">\r\n                            <Link to={'/'}>\r\n                                <span className=\"sr-only\">Go to home page</span>\r\n                                <img className=\"d-block avatar avatar-xxl p-2 mb-2 mx-auto rounded img-thumbnail hover-animate\" src={!user.loading && user.success && user.data.avatar_url !== null\r\n                                    ?  user.data.avatar_url\r\n                                    : 'https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/images/robsmitha.png'} loading=\"lazy\"\r\n                                    alt=\"\" />\r\n                            </Link>\r\n                            <h5>\r\n                                {!user.loading && user.success\r\n                                ? user.data.name\r\n                                : 'Rob Smitha'}\r\n                            </h5>\r\n                            <p className=\"text-muted text-sm mb-0\">\r\n                            {!user.loading && user.success\r\n                            ? user.data.location\r\n                            : 'United States'}\r\n                            </p>\r\n                        </CardHeader>\r\n                        <ListGroup flush>\r\n                            <Link to={'/'} className=\"list-group-item list-group-item-action\" hidden={true}>\r\n                                <FontAwesomeIcon icon={faHome} className=\"text-secondary\" />&nbsp;\r\n                                Home\r\n                            </Link>\r\n                            <ListGroupItem className=\"small text-muted\">\r\n                                <FontAwesomeIcon icon={faExternalLinkAlt} />&nbsp;\r\n                                External links\r\n                            </ListGroupItem>\r\n                            <a href=\"https://github.com/robsmitha\" target=\"_blank\" className=\"list-group-item list-group-item-action\" rel=\"noopener noreferrer\">\r\n                                <FontAwesomeIcon icon={faGithub} className=\"text-github\" />&nbsp;\r\n                                <span className=\"sr-only\">Rob Smitha's</span>\r\n                                GitHub\r\n                            </a>\r\n                            <a href=\"https://www.linkedin.com/in/robsmitha/\" target=\"_blank\" className=\"list-group-item list-group-item-action\" rel=\"noopener noreferrer\">\r\n                                <FontAwesomeIcon icon={faLinkedin} className=\"text-linkedin\" />&nbsp;\r\n                                <span className=\"sr-only\">Rob Smitha's</span>\r\n                                LinkedIn\r\n                            </a>\r\n                            <a href=\"https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/files/Rob+Smitha+Resume.pdf\" target=\"_blank\" className=\"list-group-item list-group-item-action\" rel=\"noopener noreferrer\">\r\n                                <FontAwesomeIcon icon={faFilePdf} className=\"text-resume\" />&nbsp;\r\n                                <span className=\"sr-only\">Rob Smitha's</span>\r\n                                Résumé\r\n                            </a>\r\n                        </ListGroup>\r\n                    </Card>\r\n                        )}\r\n                </UserConsumer>\r\n            </header>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './NavMenu.css'\r\nimport { Container, NavbarToggler, NavbarBrand, NavItem, NavLink, Navbar } from 'reactstrap';\r\nimport { UserConsumer } from '../../contexts/UserContext';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExternalLinkAlt, faHome, faFilePdf, faTimes, faBars } from '@fortawesome/free-solid-svg-icons';\r\nimport { faLinkedin, faGithub } from '@fortawesome/free-brands-svg-icons';\r\n\r\nexport default class NavMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            collapsed: true,\r\n            navHeight: 56\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        const avatar = document.querySelector('.avatar');\r\n        avatar.onload = () => {\r\n            const navbar = document.querySelector('.main-nav');\r\n            this.setState({ navHeight: navbar !== null ? navbar.clientHeight : 56 })\r\n        };\r\n    }\r\n\r\n    toggleNavbar = () => {\r\n        this.setState({\r\n            collapsed: !this.state.collapsed\r\n        })\r\n    }\r\n\r\n    collapseNavbar = () => {\r\n        this.setState({ collapsed: true })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <UserConsumer>\r\n            {({ user }) => (\r\n            <section className=\"main-nav-header\" style={{paddingTop: this.state.navHeight + 'px'}}>\r\n                <Navbar className=\"main-nav navbar navbar-expand-lg fixed-top navbar-light shadow bg-light p-3\">\r\n                    <Container>\r\n                        <NavbarBrand className=\"mr-auto mr-lg-0\" tag={Link} to=\"/\" onClick={this.collapseNavbar}>\r\n                            <div className=\"media\">\r\n                            <img className=\"navatar img-fluid d-block d-md-none rounded\" \r\n                                src={!user.loading && user.success && user.data.avatar_url !== null\r\n                                ?  user.data.avatar_url\r\n                                : 'https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/images/robsmitha.png'}\r\n                                 />&nbsp;\r\n                                <div className=\"media-body\">\r\n                                    <span className=\"d-block\">Rob Smitha</span>\r\n                                    <small className=\"text-muted d-block\">Software Engineer</small>\r\n                                </div>\r\n                            </div>\r\n                        </NavbarBrand>\r\n                        <NavbarToggler className=\"p-2 border-0\" onClick={this.toggleNavbar}>\r\n                            <FontAwesomeIcon icon={this.state.collapsed ? faBars : faTimes} />\r\n                        </NavbarToggler>\r\n                        <div style={{ top: this.state.navHeight + 'px' }} \r\n                        className={'navbar-collapse offcanvas-collapse bg-light '.concat(!this.state.collapsed ? ' open' : '')} \r\n                        id=\"navbarsExampleDefault\">\r\n                            <ul className=\"navbar-nav mr-auto\" hidden={true}>\r\n                                <NavItem>\r\n                                    <NavLink tag={Link} to={'/'} onClick={this.collapseNavbar}>\r\n                                        <FontAwesomeIcon icon={faHome} className=\"text-secondary\" />&nbsp;Home\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </ul>\r\n                            <ul className=\"navbar-nav ml-auto\">\r\n                                <li className=\"navbar-text small text-muted\">\r\n                                    <FontAwesomeIcon icon={faExternalLinkAlt} />&nbsp;\r\n                                    External links\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"https://github.com/robsmitha\" target=\"_blank\" className=\"nav-link\" rel=\"noopener noreferrer\">\r\n                                    <FontAwesomeIcon icon={faGithub} className=\"text-github\" />&nbsp;GitHub\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"https://www.linkedin.com/in/robsmitha/\" target=\"_blank\" className=\"nav-link\" rel=\"noopener noreferrer\">\r\n                                    <FontAwesomeIcon icon={faLinkedin} className=\"text-linkedin\" />&nbsp;LinkedIn\r\n                                    </a>\r\n                                </li>\r\n                                <li className=\"nav-item\">\r\n                                    <a href=\"https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/files/Rob+Smitha+Resume.pdf\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"nav-link\">\r\n                                    <FontAwesomeIcon icon={faFilePdf} className=\"text-resume\" />&nbsp;Résumé\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </Container>\r\n                </Navbar>\r\n            </section> \r\n            )}\r\n            </UserConsumer>           \r\n            )\r\n    }\r\n}","import React, { useRef } from 'react';\r\nimport { Route } from 'react-router-dom';  \r\nimport { Row, Col, Container } from 'reactstrap';\r\nimport Header from './Header'\r\nimport NavMenu from './NavMenu';\r\n\r\nconst Layout = ({ children }) => {\r\n    return <section>\r\n    <a className=\"skip-to-content-link btn btn-primary\" href={window.location.href.includes('#main') ? window.location.href : window.location.href.concat('#main')} hidden={true}>Skip to main content</a>\r\n    <NavMenu />\r\n    <Container className=\"py-3 py-md-4\">\r\n        <Row>\r\n            <Col lg=\"3\" md=\"4\" className=\"d-none d-md-block\">\r\n                <Header />\r\n            </Col>\r\n            <Col lg=\"9\" md=\"8\">\r\n                <main id=\"main\">\r\n                {children}\r\n                </main>\r\n            </Col>\r\n        </Row>\r\n    </Container>\r\n</section>};\r\n\r\n\r\nconst LayoutRoute = ({ component: Component, ...rest }) => {\r\n    return (\r\n        <Route {...rest} render={matchProps => (\r\n            <Layout>\r\n                <Component {...matchProps} />\r\n            </Layout>\r\n        )} />\r\n    )\r\n}\r\n\r\nexport default LayoutRoute;","import React from 'react';\r\n\r\nconst Loading = props => {\r\n    let message = props.message !== undefined ? props.message : ''\r\n    return (\r\n        <span>\r\n            <span className=\"spinner-grow\" role=\"status\">\r\n                <span className=\"sr-only\">Loading...</span>\r\n            </span>\r\n            {message}\r\n        </span>\r\n    )\r\n}\r\n\r\nexport default Loading","import React from 'react';\r\n\r\nexport const UnDrawServerDown = 'undraw_server_down_s4lk'\r\nexport const UnDrawBlankCanvas =  'undraw_blank_canvas_3rbb'\r\nexport const UnDrawBugFixing = 'undraw_bug_fixing_oc7a'\r\nexport const UnDrawCancel =  'undraw_cancel_u1it'\r\nexport const UnDrawPageNotFound =  'undraw_page_not_found_su7k'\r\nexport const UnDrawQAEngineers =  'undraw_QA_engineers_dg5p'\r\nexport const UnDrawWarning =  'undraw_warning_cyit'\r\nexport const UnDrawNotFound =  'undraw_not_found_60pq'\r\nexport const UnDrawEmpty =  'empty'\r\n\r\nconst UnDraw = props => {\r\n    const width = window.innerWidth < 768 ? \"200px\" : \"300px\";\r\n    const baseUrl = 'https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/vendor/unDraw/'\r\n    let svg = ''\r\n    switch(props.svg){\r\n        case undefined:\r\n        case null: \r\n        case '': \r\n            const svgs = [ \r\n                UnDrawServerDown,\r\n                UnDrawBlankCanvas,\r\n                UnDrawBugFixing,\r\n                UnDrawCancel,\r\n                UnDrawPageNotFound,\r\n                UnDrawQAEngineers,\r\n                UnDrawWarning,\r\n                UnDrawNotFound,\r\n                UnDrawEmpty\r\n            ]\r\n            svg = svgs[Math.floor(Math.random() * svgs.length)]\r\n            break;\r\n        default:\r\n            svg = props.svg\r\n            break;\r\n    }\r\n    return <img width={width} src={baseUrl + svg + '.svg'} alt=\"\" {...props} />\r\n}\r\nexport default UnDraw","import React from 'react';\r\nimport { Col, Row } from 'reactstrap';\r\nimport UnDraw from './UnDraw';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faExclamationTriangle } from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nconst ErrorMessage = props => {\r\n    let message = props.message !== undefined ? props.message : ''\r\n    return (\r\n        <Row>\r\n            <Col xs=\"12\">\r\n                <UnDraw className=\"d-block mx-auto\" />\r\n            </Col>\r\n            <Col xs=\"12\">\r\n                <Row className=\"h-100 justify-content-center align-items-center\">\r\n                    <Col>\r\n                        <p className=\"lead mt-2 text-muted text-center\" aria-label={message}>\r\n                            <FontAwesomeIcon icon={faExclamationTriangle} />&nbsp;\r\n                            {message}\r\n                        </p>\r\n                    </Col>\r\n                </Row>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage","﻿import React from 'react';\r\n\r\nexport const DeviconAmazonWebServicesOriginal = 'amazonwebservices-original'\r\nexport const DeviconCSharpOriginal = 'csharp-original'\r\nexport const DeviconJavaScriptPlain = 'javascript-plain'\r\nexport const DeviconCSS3WordMark = 'css3-original-wordmark'\r\nexport const DeviconHTML5WordMark = 'html5-original-wordmark'\r\nexport const DeviconTypeScriptOriginal = 'typescript-original'\r\nexport const DeviconDeviconOriginalWordmark = 'devicon-original-wordmark'\r\nexport const DeviconLinuxOriginal = 'linux-original'\r\nexport const DeviconBootstrapPlainWordMark = 'bootstrap-plain-wordmark'\r\nexport const DeviconDotNetOriginalWordmark = 'dot-net-original-wordmark'\r\nexport const DeviconDotNetPlain = 'dot-net-plain'\r\nexport const DeviconAngularJSPlain = 'angularjs-plain'\r\nexport const DeviconReactOriginal = 'react-original'\r\nexport const DeviconAndroidOriginal = 'android-original'\r\nexport const DeviconYarnOriginal = 'yarn-original'\r\nexport const DeviconVueJSOriginal = 'vuejs-original'\r\nexport const DeviconGoogleOriginal = 'google-original'\r\n\r\nconst Devicon = props => {\r\n    let icon = ''\r\n    switch(props.icon){\r\n        case undefined:\r\n        case null: \r\n        case '': \r\n            icon = DeviconDeviconOriginalWordmark\r\n            break;\r\n        default:\r\n            icon = props.icon\r\n            break;\r\n    }\r\n    const baseUrl = 'https://smitha-cdn.s3.us-east-2.amazonaws.com/Content/vendor/devicons/'\r\n    return <img src={baseUrl + icon + '.svg'} alt={'Developer icon '.concat(props.ikey)} {...props} />\r\n}\r\n\r\nexport default Devicon","import React from 'react';\r\nimport Devicon from './Devicon';\r\n\r\n\r\nconst MappedIcon = props => {\r\n    let icon = null\r\n    if(props.map !== undefined && props.ikey !== undefined && props.map !== null && props.ikey !== null ) {\r\n        const map = props.map\r\n        const key = props.ikey.toLowerCase()\r\n        if(map.has(key)) \r\n            icon = map.get(key)\r\n    }\r\n\r\n    return <Devicon icon={icon} {...props} />\r\n}\r\n\r\nexport default MappedIcon","import React from 'react';\r\nimport { \r\n    DeviconHTML5WordMark, \r\n    DeviconCSharpOriginal, \r\n    DeviconJavaScriptPlain, \r\n    DeviconCSS3WordMark, \r\n    DeviconTypeScriptOriginal\r\n} from './Devicon';\r\nimport MappedIcon from './MappedIcon';\r\n\r\n\r\nconst LanguageIcon = props => {\r\n    const language = props.language !== undefined  && props.language !== null ? props.language.toLowerCase() : null\r\n    const map = new Map([\r\n        ['c#', DeviconCSharpOriginal],\r\n        ['javascript', DeviconJavaScriptPlain],\r\n        ['css', DeviconCSS3WordMark],\r\n        ['html', DeviconHTML5WordMark],\r\n        ['typescript', DeviconTypeScriptOriginal],\r\n    ])\r\n    return <MappedIcon\r\n        ikey={language}\r\n            map={map}  \r\n            {...props}\r\n        />\r\n}\r\n\r\nexport default LanguageIcon","import React from 'react';\r\nimport { \r\n    DeviconAmazonWebServicesOriginal,\r\n    DeviconLinuxOriginal,\r\n    DeviconBootstrapPlainWordMark,\r\n    DeviconDotNetPlain,\r\n    DeviconAngularJSPlain,\r\n    DeviconReactOriginal,\r\n    DeviconAndroidOriginal,\r\n    DeviconVueJSOriginal,\r\n    DeviconYarnOriginal,\r\n    DeviconGoogleOriginal\r\n} from './Devicon';\r\nimport MappedIcon from './MappedIcon';\r\nimport LanguageIcon from './LanguageIcon';\r\n\r\n\r\nconst ResourceIcon = props => {\r\n    const { resource, language } = props\r\n    const map = new Map([\r\n        ['aws-sdk-net', DeviconAmazonWebServicesOriginal],\r\n        ['linux', DeviconLinuxOriginal],\r\n        ['bootstrap', DeviconBootstrapPlainWordMark],\r\n        ['aspnetcore', DeviconDotNetPlain],\r\n        ['angular', DeviconAngularJSPlain],\r\n        ['react', DeviconReactOriginal],\r\n        ['react-stripe-elements', DeviconReactOriginal],\r\n        ['vue', DeviconVueJSOriginal],\r\n        ['cli', DeviconVueJSOriginal],\r\n        ['vuetify', DeviconVueJSOriginal],\r\n        ['yarn', DeviconYarnOriginal],\r\n        ['grpc', DeviconGoogleOriginal],\r\n        ['clover-android-sdk', DeviconAndroidOriginal]\r\n    ])\r\n    if(resource !== undefined && resource !== null && map.has(resource)) {\r\n        return <MappedIcon\r\n                ikey={resource}\r\n                map={map}  \r\n                {...props}\r\n            />\r\n    }\r\n    \r\n    return <LanguageIcon language={language} {...props} />\r\n}\r\n\r\nexport default ResourceIcon","﻿import React, { Component } from 'react';\r\nimport { UserConsumer } from './../contexts/UserContext';\r\nimport './Home.css'\r\nimport { gitHubService } from '../services/github.service';\r\nimport Loading from './../components/_helpers/Loading'\r\nimport { Col, Row, Card, CardBody } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport ErrorMessage from './_helpers/ErrorMessage';\r\nimport ResourceIcon from './_helpers/ResourceIcon';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faExternalLinkAlt, faArrowCircleRight } from '@fortawesome/free-solid-svg-icons';\r\nimport LanguageIcon from './_helpers/LanguageIcon';\r\n\r\nexport default class Home extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            repos: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            },\r\n            starred: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.title = \"Rob Smitha - Home Page\"\r\n        this.getUserRepos()\r\n        this.getStarred()\r\n    }\r\n\r\n    async getUserRepos(){\r\n        const data = await gitHubService.getUserRepos()\r\n        const success = data !== null\r\n        const repos = success ? data.filter((el) => el.description !== null && el.description.length > 0) : [];\r\n            this.setState({\r\n                repos: {\r\n                    loading: false,\r\n                    success: success,\r\n                    data: repos\r\n                }\r\n            })\r\n    }\r\n\r\n    async getStarred(){\r\n        const data = await gitHubService.getStarred()\r\n        this.setState({\r\n            starred: {\r\n                loading: false,\r\n                success: data !== null,\r\n                data: data\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { repos, starred } = this.state\r\n        return(\r\n            <UserConsumer>\r\n                {({ user }) => (\r\n                <div>\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                        Welcome\r\n                    </p>\r\n                    <h2 className=\"mb-4\">\r\n                        {!user.loading && user.success && user.data.name !== null\r\n                        ? <span>Hello, I'm {user.data.name.split(' ')[0]}!</span>\r\n                        : <span>Hello, I'm Rob!</span>}\r\n                    </h2>\r\n                    \r\n                    {user.loading\r\n                    ? <Loading message=\"Loading user, please wait..\" />\r\n                    : !repos.success\r\n                        ? <p className=\"lead text-muted mt-2\">Full Stack Web Development with .NET and JavaScript.</p>\r\n                        : <p className=\"lead text-muted mt-2\">{user.data.bio}</p>}\r\n                    <hr />\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                    Projects\r\n                    </p>\r\n                    <h3 className=\"mb-4 h4\">Repositories</h3>\r\n                    <div className=\"mb-3\">\r\n                        <Row>\r\n                        {repos.loading\r\n                            ? <Loading message=\"Loading repos, please wait..\" />\r\n                            : !repos.success\r\n                            ? <Col>\r\n                                <ErrorMessage message=\"Could not load repos\" />\r\n                            </Col>\r\n                            : repos.data.map((r, index) =>\r\n                            <Col md=\"4\" key={r.name} className=\"mb-4\">\r\n                                <Card className=\"h-100\">\r\n                                    <CardBody className=\"d-flex flex-column\" aria-labelledby={'repo-name-'.concat(index)} aria-describedby={'repo-description-'.concat(index)}>                                \r\n                                        <p id={'repo-name-'.concat(index)}>\r\n                                            {r.name}&nbsp;<LanguageIcon className=\"bd-placeholder-img float-right\" language={r.language} />\r\n                                        </p>\r\n                                        \r\n                                        <p id={'repo-description-'.concat(index)} className=\"pb-1 mb-2 small lh-125 text-muted\">\r\n                                            {r.description}\r\n                                        </p>     \r\n\r\n                                        <div className=\"mt-auto\">\r\n                                            <Link className=\"hover-animate d-block\" to={'/repo/:name'.replace(':name', r.name)}>\r\n                                                Project Details<span className=\"sr-only\">for {r.name}</span>\r\n                                                <FontAwesomeIcon className=\"float-right mt-1\" icon={faArrowCircleRight} />\r\n                                            </Link>\r\n                                        </div>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            </Col>)}\r\n                        </Row>\r\n                    </div>\r\n                    <hr />\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                    Tools\r\n                    </p>\r\n                    <h3 className=\"mb-4 h4\">\r\n                    Resources\r\n                    </h3>\r\n                    <div className=\"mb-3\">\r\n                    <div className=\"card-columns\">\r\n                            {starred.loading\r\n                            ? <Loading message=\"Loading tools, please wait..\" />\r\n                            : !starred.success\r\n                            ? <Card>\r\n                                <ErrorMessage message=\"Could not load tools.\" />\r\n                            </Card>\r\n                            : starred.data.sort((a,b) => new Date(b.updated_at) - new Date(a.updated_at))\r\n                            .map((r, index) =>\r\n                            <Card key={r.name}>\r\n                                <CardBody aria-labelledby={'resource-name-'.concat(index)} aria-describedby={'resource-description-'.concat(index)}>                                \r\n                                    <p id={'resource-name-'.concat(index)} className=\"small\">\r\n                                        {r.name} \r\n                                        <ResourceIcon className=\"bd-placeholder-img float-right\" resource={r.name} language={r.language} />\r\n                                    </p>\r\n                                    <p id={'resource-description-'.concat(index)} className=\"pb-1 mb-2 small lh-125 text-muted\">\r\n                                        {r.description}\r\n                                    </p>                         \r\n                                    <div className=\"mt-auto text-right\">\r\n                                        <a target=\"_blank\" \r\n                                        href={r.html_url} \r\n                                        rel=\"noopener noreferrer\">\r\n                                            <span className=\"sr-only\">{r.name} repository on GitHub.com</span>\r\n                                            <FontAwesomeIcon icon={faExternalLinkAlt} />\r\n                                        </a>\r\n                                    </div>\r\n                                </CardBody>\r\n                            </Card>)}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                )}\r\n            </UserConsumer>\r\n        )\r\n    }\r\n}","﻿import React, { Component } from 'react';\r\nimport { gitHubService } from '../services/github.service';\r\nimport { Col, Row, ListGroup } from 'reactstrap';\r\nimport Loading from './_helpers/Loading';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faLaptopCode, faPlay } from '@fortawesome/free-solid-svg-icons'\r\nimport { Link } from 'react-router-dom';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport ErrorMessage from './_helpers/ErrorMessage';\r\nimport LanguageIcon from './_helpers/LanguageIcon';\r\n\r\nexport default class Repo extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            name: this.props.match.params.name,\r\n            repo: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            },\r\n            commits: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            },\r\n            languages: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getRepo()\r\n        this.getLanguages()\r\n        this.getCommits()\r\n    }\r\n\r\n    async getRepo(){\r\n        const data = await gitHubService.getRepo(this.state.name)\r\n        if(data){\r\n            document.title = `Rob Smitha - ${data.name}`\r\n        }\r\n        this.setState({\r\n            repo: {\r\n                loading: false,\r\n                success: data !== null,\r\n                data: data\r\n            }\r\n        })\r\n    }\r\n\r\n    async getCommits(){\r\n        const data = await gitHubService.getCommits(this.state.name)\r\n\r\n        const dates = data !== null ? data.reduce((groups, group) => {\r\n            const date = group.commit.committer.date.split('T')[0];\r\n            if (!groups[date]) {\r\n                groups[date] = [];\r\n            }\r\n            groups[date].push(group);\r\n            return groups;\r\n        }, {}) \r\n        : [];\r\n\r\n        const commits = Object.keys(dates).map((date) => {\r\n            return {\r\n            date,\r\n            commits: dates[date]\r\n            };\r\n        });\r\n\r\n        this.setState({\r\n            commits: {\r\n                loading: false,\r\n                success: commits !== null,\r\n                data: commits\r\n            }\r\n        })\r\n    }\r\n\r\n    async getLanguages(){\r\n        const data = await gitHubService.getLanguages(this.state.name)\r\n        this.setState({\r\n            languages: {\r\n                loading: false,\r\n                success: data !== null,\r\n                data: data\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const { repo, name, languages, commits } = this.state\r\n        return(\r\n            <div>\r\n                \r\n                <div className=\"mb-4\">\r\n                    <Link to={'/'}>Home</Link> &minus; {repo.data !== null ? repo.data.name : name}\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                        Repository\r\n                    </p>\r\n                    {repo.loading\r\n                    ? <Loading message=\"Loading repo, please wait..\" />\r\n                    : !repo.success\r\n                    ? <ErrorMessage message=\"Could not load repo.\" />\r\n                    : <div aria-labelledby=\"repository-name\" aria-describedby=\"repository-description\">\r\n                        <h2 id=\"repository-name\" className=\"d-block mb-4\">\r\n                            {repo.data.name}\r\n                        </h2>\r\n                        <p id=\"repository-description\" className=\"lead mt-2\">\r\n                            {repo.data.description}\r\n                        </p>\r\n                        <Row>\r\n                        {repo.data.homepage !== null && repo.data.homepage.length > 0 ? \r\n                            <Col xs=\"12\" sm=\"6\">\r\n                                <a className=\"btn btn-dark btn-block mb-3\" href={repo.data.homepage} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n                                    <FontAwesomeIcon className=\"text-success\" icon={faPlay} />&nbsp;{repo.data.name}\r\n                                </a> \r\n                            </Col>\r\n                            : ''}\r\n                            <Col xs=\"12\" sm=\"6\">\r\n                                <a href={repo.data.html_url} className=\"btn btn-light btn-block\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                                    <FontAwesomeIcon icon={faGithub} />&nbsp;Continue to GitHub\r\n                                </a>\r\n                            </Col>\r\n                        </Row>\r\n                        <hr />\r\n                    </div>}\r\n                </div>\r\n                <div className=\"mb-3\" aria-labelledby=\"languages\">\r\n                    <p id=\"languages\" className=\"subtitle text-sm text-primary\">\r\n                        Languages\r\n                    </p>\r\n                    <h3 className=\"d-block mb-4\">Breakdown</h3>\r\n                    {languages.loading \r\n                    ? <Loading message=\"Loading languages, please wait..\" />\r\n                    : !languages.success \r\n                    ?  <ErrorMessage message=\"Could not load languages.\" />\r\n                    : <div>\r\n                        <Row>\r\n                            {Object.keys(languages.data).map((l, index) => \r\n                            <Col key={l} className=\"mb-3 text-md-left text-center\">\r\n                                <LanguageIcon className=\"bd-placeholder-img mb-2 mr-2 rounded\" language={l} />\r\n                                <span aria-labelledby={'lines-of-code-label'.concat(index)} aria-describedby={'lines-of-code-count'.concat(index)}>\r\n                                    <span id={'lines-of-code-label'.concat(index)} className=\"sr-only\">{'Lines of '.concat(l, ' code')}</span>\r\n                                    <small id={'lines-of-code-count'.concat(index)} className=\"text-muted lead\">{languages.data[l]}</small>\r\n                                </span>\r\n                            </Col>)}\r\n                        </Row>\r\n                    </div>}\r\n                </div>\r\n                <hr />\r\n\r\n                <div className=\"mb-3\" aria-labelledby=\"commit-activity-label\">\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                        Commits\r\n                    </p>\r\n                    <h3 id=\"commit-activity-label\" className=\"d-block mb-4\">\r\n                        <span className=\"sr-only\">Recent Commit</span>\r\n                        Activity\r\n                    </h3>\r\n                {commits.loading \r\n                 ? <Loading message=\"Loading commits, please wait..\" />\r\n                : !commits.success \r\n                ? <ErrorMessage message=\"Could not load commits.\" />\r\n                : <div>\r\n                    <div className=\"commits-listing commits-listing-padded\">\r\n                        {commits.data.map((c, index) => \r\n                        <div key={c.date}>\r\n                            <div className=\"commit-group-title\" aria-labelledby={'commit-group-'.concat(index)}>\r\n                                <FontAwesomeIcon className=\"git-commit\" icon={faLaptopCode} />\r\n                                <small id={'commit-group-'.concat(index)}>\r\n                                    <span className=\"sr-only\">Commits on</span>\r\n                                    {new Date(c.date).toDateString()}\r\n                                </small>\r\n                            </div>\r\n                            <div className=\"commit-group pb-3 mb-0 small lh-125\">\r\n                                <ListGroup>\r\n                                    {c.commits.map((gc, index) => \r\n                                        <Link key={gc.sha} className=\"list-group-item list-group-item-action\" \r\n                                        to={'/repo/:name/commit/:sha'.replace(':name', name).replace(':sha', gc.sha)}>\r\n                                            <div className=\"media\">\r\n                                                <img alt={'' /*gc.author !== null ? gc.author.login.concat(' avatar') : gc.committer !== null ? gc.committer.login.concat(' avatar') : 'Author avatar'*/} \r\n                                                src={gc.author !== null ? gc.author.avatar_url : gc.committer !== null ? gc.committer.avatar_url : ''} \r\n                                                className=\"bd-placeholder-img mb-2 mr-2 rounded\" />&nbsp;\r\n                                                <div className=\"media-body\" aria-labelledby={'commit-label-'.concat(index)} aria-describedby={'commit-message-'.concat(index)}>\r\n                                                    <blockquote className=\"blockquote\">\r\n                                                        <small id={'commit-message-'.concat(index)} className=\"d-block mb-2 text-break\">\r\n                                                            {gc.commit.message}\r\n                                                        </small>\r\n                                                        <div className=\"blockquote-footer small\" id={'commit-label-'.concat(index)}>\r\n                                                            {gc.author.login}<span className=\"sr-only\">commit message</span> on&nbsp;\r\n                                                            <cite>{new Date(gc.commit.author.date).toLocaleTimeString()}</cite>\r\n                                                        </div>\r\n                                                    </blockquote>\r\n                                                </div>\r\n                                            </div>\r\n                                        </Link>\r\n                                        )}\r\n                                </ListGroup>\r\n                            </div>\r\n                        </div>)}\r\n                    </div>\r\n                </div>}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { Badge } from 'reactstrap';\r\n\r\nconst FileChangeStatus = props => {\r\n    let color = 'light'\r\n    switch(props.status.toLowerCase()){\r\n        case 'modified':\r\n            color = 'primary'\r\n            break;\r\n        case 'renamed':\r\n            color = 'light'\r\n            break;\r\n        case 'added':\r\n            color = 'success'\r\n            break;\r\n        case 'removed':\r\n        color = 'danger'\r\n        break;\r\n        default: break;\r\n    }\r\n    return <span><span className=\"sr-only\">Status </span><Badge color={color} {...props}>{props.status}</Badge></span>\r\n}\r\n\r\nexport default FileChangeStatus","import React, { Component } from 'react';\r\nimport { gitHubService } from '../services/github.service';\r\nimport Loading from './_helpers/Loading';\r\nimport UnDraw from './_helpers/UnDraw';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { Link } from 'react-router-dom';\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons';\r\nimport { faPlus, faMinus, faFileCode } from '@fortawesome/free-solid-svg-icons';\r\nimport { ListGroup } from 'reactstrap';\r\nimport FileChangeStatus from './_helpers/FileChangeStatus';\r\n\r\nexport default class Commit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            name: this.props.match.params.name,\r\n            sha: this.props.match.params.sha,\r\n            commit: {\r\n                loading: true,\r\n                success: false,\r\n                data: null\r\n            }\r\n        };\r\n    }\r\n\r\n    componentDidMount(){\r\n        document.title = `Rob Smitha - Commit ${this.state.sha}`\r\n        this.getCommit()\r\n    }\r\n    \r\n    async getCommit(){\r\n        const { name, sha } = this.state\r\n        const data = await gitHubService.getCommit(name, sha)\r\n        this.setState({\r\n            commit: {\r\n                loading: false,\r\n                success: data !== null,\r\n                data: data\r\n            }\r\n        })\r\n    }\r\n\r\n    render(){\r\n        const {commit, name, sha} = this.state\r\n        return(\r\n            <div className=\"h-100\">\r\n                <div className=\"mb-4\">\r\n                    <Link to={'/'}>Home</Link>&nbsp;&minus;&nbsp;\r\n                    <Link to={'/repo/:name'.replace(':name', name)}>{name}</Link>&nbsp;&minus;&nbsp;\r\n                    <span className=\"text-break\" aria-hidden=\"true\">\r\n                        <span className=\"sr-only\">Commit sha</span>\r\n                        {sha}\r\n                    </span>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                <p className=\"subtitle text-sm text-primary\">\r\n                Commit\r\n                </p>\r\n                {commit.loading\r\n                ? <Loading message=\"Loading commit, please wait..\" />\r\n                : !commit.success\r\n                ? <div>\r\n                    <h2 className=\"d-block mb-4\">\r\n                    {name} - {sha}\r\n                    </h2>\r\n                    <UnDraw icon=\"undraw_not_found_60pq\" />\r\n                    <p className=\"lead mt-2\">\r\n                    Could not load the commit.\r\n                    </p>\r\n                </div>\r\n                : <div>\r\n                    <h2 className=\"d-block mb-4\">\r\n                        Message\r\n                    </h2>\r\n\r\n                    <blockquote className=\"blockquote\" aria-labelledby=\"commit-label\" aria-describedby=\"commit-message\">\r\n                        <p id=\"commit-message\" className=\"mb-0 lead\">{commit.data.commit.message}</p>\r\n                        <div id=\"commit-label\" className=\"blockquote-footer\">\r\n                            {commit.data.commit.committer.name}<span className=\"sr-only\">commit message</span> on&nbsp;\r\n                            <cite>{new Date(commit.data.commit.committer.date).toLocaleString()}</cite>\r\n                        </div>\r\n                    </blockquote>\r\n                    <hr />\r\n                    <p className=\"subtitle text-sm text-primary\">\r\n                        Stats\r\n                    </p>\r\n                    <h2 className=\"d-block mb-4\">\r\n                        Changes\r\n                    </h2>\r\n                    <div aria-labelledby=\"commit-statistics\">\r\n                        <p className=\"lead mt-2\" id=\"commit-statistics\">\r\n                            Showing <strong>{commit.data.files.length} changed files </strong> \r\n                            with <strong className=\"text-success\">{commit.data.stats.additions} additions </strong> \r\n                            and <strong className=\"text-danger\">{commit.data.stats.deletions} deletions.</strong>\r\n                        </p>\r\n                    </div>\r\n                    <ListGroup flush>\r\n                        {commit.data.files.map((f, index) =>\r\n                        <a target=\"_blank\" rel=\"norefeffer noopener\" href={f.blob_url} className=\"list-group-item list-group-item-action px-1\" key={index}\r\n                        aria-labeledby={'file-name-'.concat(index)} aria-describedby={'file-changes-'.concat(index)}>\r\n                            <span className=\"d-block\">\r\n                                <small className=\"text-nowrap\"><FontAwesomeIcon icon={faFileCode} />&nbsp;</small>\r\n                                <span className=\"text-break\">{f.filename}</span>\r\n                            </span>\r\n                            <div id={'file-changes-'.concat(index)}>\r\n                                <FileChangeStatus status={f.status} />&nbsp;\r\n                                <span className=\"text-success\">\r\n                                    <FontAwesomeIcon icon={faPlus} />&nbsp;{f.additions}&nbsp;\r\n                                    <span className=\"sr-only\">additions</span>\r\n                                </span>\r\n                                <span className=\"text-danger\">\r\n                                    <FontAwesomeIcon icon={faMinus} />&nbsp;{f.deletions}\r\n                                    <span className=\"sr-only\">deletions</span>\r\n                                </span>\r\n                            </div>\r\n                        </a>\r\n                        )}\r\n                        <a href={commit.data.html_url} className=\"list-group-item list-group-item-action\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                            <FontAwesomeIcon icon={faGithub} />&nbsp;See full commit on GitHub\r\n                        </a>\r\n                    </ListGroup>\r\n                </div>}\r\n                </div>\r\n            </div>     \r\n            )\r\n    }\r\n    \r\n}","﻿import React, { Component } from 'react';\r\n\r\nconst ThemeContext = React.createContext();\r\n\r\nclass ThemeProvider extends Component {\r\n\r\n    constructor(props) {\r\n        super(props) \r\n        this.state = {\r\n            theme: null\r\n        }\r\n    }\r\n\r\n    changeTheme = event => {\r\n        let theme = event.target.value;\r\n        console.log(theme)\r\n        this.setState({\r\n            theme: theme\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <ThemeContext.Provider value={{\r\n                theme: this.state.theme,\r\n                changeTheme: this.changeTheme\r\n            }}>\r\n                {this.props.children}\r\n            </ThemeContext.Provider>\r\n        )\r\n    }\r\n}\r\n\r\nconst ThemeConsumer = ThemeContext.Consumer\r\n\r\nexport { ThemeProvider, ThemeConsumer, ThemeContext }","import React, { Component } from 'react';\nimport './App.css';\n\n//Layouts\nimport LayoutRoute from './components/_layout/LayoutRoute';\n\n//Components\nimport Home from './components/Home'\nimport Repo from './components/Repo'\nimport Commit from './components/Commit'\nimport {browserHistory, withRouter} from 'react-router';\n//Contexts\nimport { ThemeProvider } from './contexts/ThemeContext'\nimport { UserProvider } from './contexts/UserContext'\n\nclass App extends Component {\n\n  componentWillMount() {\n    this.unlisten = this.props.history.listen((location, action) => {\n      window.scrollTo(0,0)\n    });\n  }\n  componentWillUnmount() {\n      this.unlisten();\n  }\n  render(){\n    return (\n      <ThemeProvider>\n        <UserProvider>\n          <LayoutRoute exact path='/' component={Home} />\n          <LayoutRoute exact path='/repo/:name' component={Repo} />\n          <LayoutRoute exact path='/repo/:name/commit/:sha' component={Commit} />\n        </UserProvider>\n      </ThemeProvider>\n    )\n  }\n}\nexport default  withRouter(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst baseUrl = document.getElementsByTagName('base')[0].getAttribute('href');\nconst rootElement = document.getElementById('root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={baseUrl}>\n    <App />\n  </BrowserRouter>\n  </React.StrictMode>,\n  rootElement\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}